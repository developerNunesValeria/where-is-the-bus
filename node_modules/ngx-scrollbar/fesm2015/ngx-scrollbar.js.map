{"version":3,"file":"ngx-scrollbar.js","sources":["ng://ngx-scrollbar/lib/scrollbar/common.ts","ng://ngx-scrollbar/lib/scroll-viewport.ts","ng://ngx-scrollbar/lib/ng-scrollbar.model.ts","ng://ngx-scrollbar/lib/utils/scrollbar-manager.ts","ng://ngx-scrollbar/lib/ng-scrollbar.ts","ng://ngx-scrollbar/lib/utils/native-scrollbar-size-factory.ts","ng://ngx-scrollbar/lib/utils/hide-native-scrollbar.ts","ng://ngx-scrollbar/lib/utils/ng-attr.directive.ts","ng://ngx-scrollbar/lib/utils/resize-sensor.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.directive.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.component.ts","ng://ngx-scrollbar/lib/ng-scrollbar.module.ts","ng://ngx-scrollbar/public-api.ts","ng://ngx-scrollbar/ngx-scrollbar.ts"],"sourcesContent":["import { tap } from 'rxjs/operators';\n\nexport function preventSelection(doc: any) {\n  return tap(() => {\n    doc.onselectstart = () => false;\n  });\n}\n\nexport function enableSelection(doc: any) {\n  return tap(() => {\n    doc.onselectstart = null;\n  });\n}\n\nexport function stopPropagation() {\n  return tap((e: any) => e.stopPropagation());\n}\n\n/**\n * Check if pointer is within scrollbar bounds\n */\nexport function isWithinBounds(e: any, rect: ClientRect): boolean {\n  return (\n    e.clientX >= rect.left &&\n    e.clientX <= rect.left + rect.width &&\n    e.clientY >= rect.top &&\n    e.clientY <= rect.top + rect.height\n  );\n}\n","import { Directive, Inject, ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, merge, Observable, Subscriber } from 'rxjs';\nimport { map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { stopPropagation } from './scrollbar/common';\n\n@Directive({\n  selector: '[scrollViewport]'\n})\nexport class ScrollViewport {\n  // Viewport element\n  readonly nativeElement: HTMLElement;\n  // Content wrapper element\n  contentWrapperElement!: HTMLElement;\n\n  // Stream that emits when pointer event when the viewport is hovered and emits false value when isn't hovered\n  hovered!: Observable<boolean>;\n  // Stream that emits when viewport is clicked\n  clicked!: Observable<any>;\n\n  // Get viewport size, clientHeight or clientWidth\n  get clientHeight(): number {\n    return this.nativeElement.clientHeight;\n  }\n\n  get clientWidth(): number {\n    return this.nativeElement.clientWidth;\n  }\n\n  get scrollHeight(): number {\n    return this.nativeElement.scrollHeight;\n  }\n\n  get scrollWidth(): number {\n    return this.nativeElement.scrollWidth;\n  }\n\n  // Get viewport scroll offset, scrollTop or scrollLeft\n  get scrollTop(): number {\n    return this.nativeElement.scrollTop;\n  }\n\n  get scrollLeft(): number {\n    return this.nativeElement.scrollLeft;\n  }\n\n  // Get the available scrollable size\n  get scrollMaxX(): number {\n    return this.scrollWidth - this.clientWidth;\n  }\n\n  get scrollMaxY(): number {\n    return this.scrollHeight - this.clientHeight;\n  }\n\n  get contentHeight(): number {\n    return this.contentWrapperElement.clientHeight;\n  }\n\n  constructor(public viewPort: ElementRef,\n              @Inject(DOCUMENT) private document: any) {\n    this.nativeElement = viewPort.nativeElement;\n  }\n\n  /**\n   * Activate viewport pointer events such as 'hovered' and 'clicked' events\n   */\n  activatePointerEvents(propagate: boolean, destroyed: Observable<void>): void {\n    this.hovered = new Observable((subscriber: Subscriber<boolean>) => {\n      // Stream that emits when pointer is moved over the viewport (used to set the hovered state)\n      const mouseMoveStream = fromEvent(this.nativeElement, 'mousemove', { passive: true });\n      const mouseMove = propagate ? mouseMoveStream : mouseMoveStream.pipe(stopPropagation());\n      // Stream that emits when pointer leaves the viewport (used to remove the hovered state)\n      const mouseLeave = fromEvent(this.nativeElement, 'mouseleave').pipe(map(() => false));\n      merge(mouseMove, mouseLeave).pipe(\n        tap((e: false | any) => subscriber.next(e)),\n        takeUntil(destroyed)\n      ).subscribe();\n    });\n\n    this.clicked = new Observable((subscriber: Subscriber<any>) => {\n      const mouseDown = fromEvent(this.nativeElement, 'mousedown', { passive: true }).pipe(\n        tap((e: any) => subscriber.next(e))\n      );\n      const mouseUp = fromEvent(this.nativeElement, 'mouseup', { passive: true }).pipe(\n        tap(() => subscriber.next(false))\n      );\n      mouseDown.pipe(\n        switchMap(() => mouseUp),\n        takeUntil(destroyed)\n      ).subscribe();\n    });\n  }\n\n  /**\n   * Set this directive as a non-functional wrapper, called when a custom viewport is used\n   */\n  setAsWrapper(): void {\n    // In this case the default viewport and the default content wrapper will act as a mask\n    this.nativeElement.className = 'ng-native-scrollbar-hider ng-scroll-layer';\n    if (this.nativeElement.firstElementChild) {\n      this.nativeElement.firstElementChild.className = 'ng-scroll-layer';\n    }\n  }\n\n  /**\n   * Set this directive as  the viewport, called when no custom viewport is used\n   */\n  setAsViewport(customClassName: string): void {\n    this.nativeElement.className = `ng-native-scrollbar-hider ng-scroll-viewport ${customClassName}`;\n    // Check if the custom viewport has only one child and set it as the content wrapper\n    if (this.nativeElement.firstElementChild) {\n      this.contentWrapperElement = this.nativeElement.firstElementChild as HTMLElement;\n      this.contentWrapperElement.classList.add('ng-scroll-content');\n    }\n  }\n\n  /**\n   * Scroll viewport vertically\n   */\n  scrollYTo(value: number): void {\n    this.nativeElement.scrollTop = value;\n  }\n\n  /**\n   * Scroll viewport horizontally\n   */\n  scrollXTo(value: number): void {\n    this.nativeElement.scrollLeft = value;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport type ScrollbarAppearance = 'standard' | 'compact' | undefined;\nexport type ScrollbarTrack = 'vertical' | 'horizontal' | 'all' | undefined;\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native' | undefined;\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll' | undefined;\nexport type ScrollbarPointerEventsMethod = 'viewport' | 'scrollbar' | undefined;\n\nexport const NG_SCROLLBAR_OPTIONS = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\n\nexport interface NgScrollbarOptions {\n  /**\n   * Sets the scroll axis of the viewport, there are 3 options:\n   *\n   * - `vertical` Use both vertical and horizontal scrollbar-control\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\n   * - `all` Use both vertical and horizontal scrollbar-control\n   */\n  track?: ScrollbarTrack;\n  /**\n   * When to show the scrollbar, and there are 3 options:\n   *\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\n   */\n  visibility?: ScrollbarVisibility;\n  /**\n   *  Sets the appearance of the scrollbar, there are 2 options:\n   *\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\n   */\n  appearance?: ScrollbarAppearance;\n  /**\n   * Sets the position of each scrollbar, there are 4 options:\n   *\n   * - `native` (Default) Use the default position like in native scrollbar-control.\n   * - `invertY` Inverts vertical scrollbar position\n   * - `invertX` Inverts Horizontal scrollbar position\n   * - `invertAll` Inverts both scrollbar-control positions\n   */\n  position?: ScrollbarPosition;\n  /**\n   * Sets the pointer events method\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\n   * Use scrollbar pointer events to handle dragging and track click\n   */\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\n  /** A class forwarded to scrollable viewport element */\n  viewClass?: string | undefined;\n  /** A class forwarded to the scrollbar track element */\n  trackClass?: string | undefined;\n  /** A class forwarded to the scrollbar thumb element */\n  thumbClass?: string | undefined;\n  /** The minimum scrollbar thumb size in px */\n  minThumbSize?: number | undefined;\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\n  trackClickScrollDuration?: number | undefined;\n  /** A flag used to enable/disable the scrollbar pointer events */\n  pointerEventsDisabled?: boolean | undefined;\n  /** Debounce interval for detecting changes via window.resize event */\n  windowResizeDebounce?: number | undefined;\n  /** Debounce interval for detecting changes via ResizeObserver */\n  sensorDebounce?: number | undefined;\n  /** Whether ResizeObserver is disabled */\n  sensorDisabled?: boolean | undefined;\n  /** Scroll Audit Time */\n  scrollAuditTime?: number | undefined;\n  /** Enable viewport mousemove event propagation (only when pointerEventsMethod=\"viewport\") */\n  viewportPropagateMouseMove?: boolean | undefined;\n}\n\n/**\n * Set of attributes added on the scrollbar wrapper\n */\nexport interface NgScrollbarState {\n  position?: ScrollbarPosition;\n  track?: ScrollbarTrack;\n  appearance?: ScrollbarAppearance;\n  visibility?: ScrollbarVisibility;\n  deactivated?: boolean;\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\n  dir?: 'rtl' | 'ltr';\n  verticalUsed?: boolean;\n  horizontalUsed?: boolean;\n  isVerticallyScrollable?: boolean;\n  isHorizontallyScrollable?: boolean;\n  verticalHovered?: boolean;\n  horizontalHovered?: boolean;\n  verticalDragging?: boolean;\n  horizontalDragging?: boolean;\n  // Flag used to prevent text selection on content\n  scrollbarClicked?: boolean;\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\n\nconst defaultOptions: NgScrollbarOptions = {\n  viewClass: '',\n  trackClass: '',\n  thumbClass: '',\n  track: 'vertical',\n  appearance: 'compact',\n  visibility: 'native',\n  position: 'native',\n  pointerEventsMethod: 'viewport',\n  trackClickScrollDuration: 300,\n  minThumbSize: 20,\n  windowResizeDebounce: 0,\n  sensorDebounce: 0,\n  scrollAuditTime: 0,\n  viewportPropagateMouseMove: true\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ScrollbarManager {\n  readonly globalOptions: NgScrollbarOptions;\n\n  readonly rtlScrollAxisType: RtlScrollAxisType;\n\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\n\n    this.rtlScrollAxisType = getRtlScrollAxisType();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ContentChild,\n  OnInit,\n  AfterViewChecked,\n  OnDestroy,\n  NgZone,\n  ElementRef,\n  EventEmitter,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { fromEvent, Observable, Subscriber, Subject } from 'rxjs';\nimport { auditTime, filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { ScrollViewport } from './scroll-viewport';\nimport { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\n// Uncomment the following line in development mode\n//import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from '../../smooth-scroll/src/public_api';\nimport {\n  ScrollbarAppearance,\n  ScrollbarTrack,\n  ScrollbarPosition,\n  ScrollbarVisibility,\n  NgScrollbarState,\n  ScrollbarPointerEventsMethod\n} from './ng-scrollbar.model';\nimport { ScrollbarManager } from './utils/scrollbar-manager';\n\n@Component({\n  selector: 'ng-scrollbar',\n  exportAs: 'ngScrollbar',\n  templateUrl: 'ng-scrollbar.html',\n  styleUrls: ['ng-scrollbar.scss', 'scrollbar/shared.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { '[class.ng-scrollbar]': 'true' }\n})\nexport class NgScrollbar implements OnInit, AfterViewChecked, OnDestroy {\n\n  private _disabled: boolean | undefined = false;\n  private _sensorDisabled: boolean | undefined = this.manager.globalOptions.sensorDisabled;\n  private _pointerEventsDisabled: boolean | undefined = this.manager.globalOptions.pointerEventsDisabled;\n  private _viewportPropagateMouseMove: boolean | undefined = this.manager.globalOptions.viewportPropagateMouseMove;\n\n  /** Disable custom scrollbar and switch back to native scrollbar */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n\n  /** Whether ResizeObserver is disabled */\n  @Input()\n  get sensorDisabled(): boolean {\n    return this._sensorDisabled;\n  }\n\n  set sensorDisabled(disabled: boolean) {\n    this._sensorDisabled = coerceBooleanProperty(disabled);\n  }\n\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\n  @Input()\n  get pointerEventsDisabled(): boolean {\n    return this._pointerEventsDisabled;\n  }\n\n  set pointerEventsDisabled(disabled: boolean) {\n    this._pointerEventsDisabled = coerceBooleanProperty(disabled);\n  }\n\n  /** Enable viewport mousemove event propagation (only when pointerEventsMethod=\"viewport\") */\n  @Input()\n  get viewportPropagateMouseMove(): boolean {\n    return this._viewportPropagateMouseMove;\n  }\n  set viewportPropagateMouseMove(disabled: boolean) {\n    this._viewportPropagateMouseMove = coerceBooleanProperty(disabled);\n  }\n\n  /** A class forwarded to scrollable viewport element */\n  @Input() viewClass: string | undefined = this.manager.globalOptions.viewClass;\n  /** A class forwarded to the scrollbar track element */\n  @Input() trackClass: string | undefined = this.manager.globalOptions.trackClass;\n  /** A class forwarded to the scrollbar thumb element */\n  @Input() thumbClass: string | undefined = this.manager.globalOptions.thumbClass;\n  /** Minimum scrollbar thumb size */\n  @Input() minThumbSize: number | undefined = this.manager.globalOptions.minThumbSize;\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\n  @Input() trackClickScrollDuration: number | undefined = this.manager.globalOptions.trackClickScrollDuration;\n  /**\n   * Sets the pointer events method\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\n   * Use scrollbar pointer events to handle dragging and track click\n   */\n  @Input() pointerEventsMethod: ScrollbarPointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;\n  /**\n   * Sets the supported scroll track of the viewport, there are 3 options:\n   *\n   * - `vertical` Use both vertical and horizontal scrollbar\n   * - `horizontal` Use both vertical and horizontal scrollbar\n   * - `all` Use both vertical and horizontal scrollbar\n   */\n  @Input() track: ScrollbarTrack = this.manager.globalOptions.track;\n  /**\n   * When to show the scrollbar, and there are 3 options:\n   *\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\n   */\n  @Input() visibility: ScrollbarVisibility = this.manager.globalOptions.visibility;\n  /**\n   *  Sets the appearance of the scrollbar, there are 2 options:\n   *\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\n   */\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\n  /**\n   * Sets the position of each scrollbar, there are 4 options:\n   *\n   * - `native` (Default) Use the default position like in native scrollbar.\n   * - `invertY` Inverts vertical scrollbar position\n   * - `invertX` Inverts Horizontal scrollbar position\n   * - `invertAll` Inverts both scrollbar positions\n   */\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\n  /** Debounce interval for detecting changes via ResizeObserver */\n  @Input() sensorDebounce: number | undefined = this.manager.globalOptions.sensorDebounce;\n  /** Scroll Audit Time */\n  @Input() scrollAuditTime: number | undefined = this.manager.globalOptions.scrollAuditTime;\n  /** Steam that emits when scrollbar is updated */\n  @Output() updated = new EventEmitter<void>();\n  /** Default viewport reference */\n  @ViewChild(ScrollViewport, { static: true }) private defaultViewPort: ScrollViewport;\n  /** Custom viewport reference */\n  @ContentChild(ScrollViewport, { static: true }) private customViewPort: ScrollViewport;\n  /** Viewport Element */\n  viewport: ScrollViewport;\n  /** Set of attributes added on the scrollbar wrapper */\n  state: NgScrollbarState = {};\n  /** Stream that destroys components' observables */\n  private readonly destroyed = new Subject<void>();\n\n  /** Stream that emits on scroll event */\n  scrolled: Observable<any>;\n  /** Steam that emits scroll event for vertical scrollbar */\n  verticalScrolled: Observable<any>;\n  /** Steam that emits scroll event for horizontal scrollbar */\n  horizontalScrolled: Observable<any>;\n\n  get nativeElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n\n  constructor(\n    private el: ElementRef,\n    private zone: NgZone,\n    private changeDetectorRef: ChangeDetectorRef,\n    private dir: Directionality,\n    private smoothScroll: SmoothScrollManager,\n    public manager: ScrollbarManager) {\n  }\n\n  /**\n   * Update local state with each change detection\n   */\n  private updateState() {\n    let verticalUsed: boolean = false;\n    let horizontalUsed: boolean = false;\n    let isVerticallyScrollable: boolean = false;\n    let isHorizontallyScrollable: boolean = false;\n\n    // Check if vertical scrollbar should be displayed\n    if (this.track === 'all' || this.track === 'vertical') {\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\n    }\n    // Check if horizontal scrollbar should be displayed\n    if (this.track === 'all' || this.track === 'horizontal') {\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\n    }\n\n    // Update inner wrapper attributes\n    this._updateState({\n      position: this.position,\n      track: this.track,\n      appearance: this.appearance,\n      visibility: this.visibility,\n      deactivated: this.disabled,\n      dir: this.dir.value,\n      pointerEventsMethod: this.pointerEventsMethod,\n      verticalUsed,\n      horizontalUsed,\n      isVerticallyScrollable,\n      isHorizontallyScrollable\n    });\n  }\n\n  private _updateState(state: NgScrollbarState) {\n    this.state = { ...this.state, ...state };\n    this.changeDetectorRef.detectChanges();\n  }\n\n  private getScrolledByDirection(property: 'scrollLeft' | 'scrollTop') {\n    let event: any;\n    return this.scrolled.pipe(\n      tap((e: any) => event = e),\n      pluck('target', property),\n      pairwise(),\n      filter(([prev, curr]) => prev !== curr),\n      map(() => event)\n    );\n  }\n\n  /**\n   * Set hovered state if a scrollbar is being hovered\n   */\n  setHovered(hovered: ScrollbarHovered) {\n    this.zone.run(() => this._updateState({ ...hovered }));\n  }\n\n  /**\n   * Set dragging state if a scrollbar is being dragged\n   */\n  setDragging(dragging: ScrollbarDragging) {\n    this.zone.run(() => this._updateState({ ...dragging }));\n  }\n\n  /**\n   * Set clicked state if a scrollbar track is being click\n   */\n  setClicked(scrollbarClicked: boolean) {\n    this.zone.run(() => this._updateState({ scrollbarClicked }));\n  }\n\n  ngOnInit() {\n    // Set the viewport based on user choice\n    this.zone.runOutsideAngular(() => {\n      if (this.customViewPort) {\n        this.viewport = this.customViewPort;\n        this.defaultViewPort.setAsWrapper();\n      } else {\n        this.viewport = this.defaultViewPort;\n      }\n      // Activate the selected viewport\n      this.viewport.setAsViewport(this.viewClass!);\n\n      let scrollStream = fromEvent(this.viewport.nativeElement, 'scroll', { passive: true });\n      // Throttle scroll event if 'scrollAuditTime' is set\n      scrollStream = this.scrollAuditTime ? scrollStream.pipe(auditTime(this.scrollAuditTime)) : scrollStream;\n      // Initialize scroll streams\n      this.scrolled = new Observable((subscriber: Subscriber<any>) =>\n        scrollStream.pipe(takeUntil(this.destroyed)).subscribe(subscriber)\n      );\n      this.verticalScrolled = this.getScrolledByDirection('scrollTop');\n      this.horizontalScrolled = this.getScrolledByDirection('scrollLeft');\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.updateState();\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  /**\n   * Update local state and the internal scrollbar controls\n   */\n  update() {\n    if (!this.state.horizontalUsed) {\n      // Auto-height: Set component height to content height\n      this.nativeElement.style.height = `${ this.viewport.contentHeight }px`;\n    }\n    this.updated.next();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Smooth scroll functions\n   */\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\n    return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\n  }\n\n  /**\n   * Scroll to element by reference or selector\n   */\n  scrollToElement(target: SmoothScrollElement, options?): Promise<void> {\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\n  }\n}\n\ninterface ScrollbarDragging {\n  verticalDragging?: boolean;\n  horizontalDragging?: boolean;\n}\n\ninterface ScrollbarHovered {\n  verticalHovered?: boolean;\n  horizontalHovered?: boolean;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { BehaviorSubject, fromEvent, Observable } from 'rxjs';\nimport { debounceTime, tap, distinctUntilChanged, map } from 'rxjs/operators';\nimport { ScrollbarManager } from './scrollbar-manager';\n\n@Injectable({ providedIn: 'root' })\nexport class NativeScrollbarSizeFactory {\n  private readonly _scrollbarSize = new BehaviorSubject<number>(this.getNativeScrollbarSize());\n  scrollbarSize: Observable<number> = this._scrollbarSize.asObservable();\n\n  constructor(@Inject(DOCUMENT) private document: any,\n              private manager: ScrollbarManager,\n              private platform: Platform) {\n    // Calculate native scrollbar size on window resize event, because the size changes if use zoomed in/out\n    if (platform.isBrowser) {\n      fromEvent(this.document.defaultView, 'resize', { passive: true }).pipe(\n        debounceTime(this.manager.globalOptions.windowResizeDebounce!),\n        map(() => this.getNativeScrollbarSize()),\n        distinctUntilChanged(),\n        tap((size: number) => this._scrollbarSize.next(size))\n      ).subscribe();\n    }\n  }\n\n  /**\n   * Get native scrollbar size\n   */\n  private getNativeScrollbarSize(): number {\n    // Avoid executing browser code in server side rendering\n    if (!this.platform.isBrowser) {\n      return 0;\n    }\n    // Hide iOS browsers native scrollbar\n    if (this.platform.IOS) {\n      return 6;\n    }\n    const box = this.document.createElement('div');\n    box.className = 'ng-scrollbar-measure';\n    this.document.body.appendChild(box);\n    const size = box.getBoundingClientRect().right;\n    this.document.body.removeChild(box);\n    return size;\n  }\n}\n","import { Directive, ElementRef, Renderer2, RendererStyleFlags2, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NativeScrollbarSizeFactory } from './native-scrollbar-size-factory';\n\n@Directive({\n  selector: '[hideNativeScrollbar]'\n})\nexport class HideNativeScrollbar implements OnDestroy {\n\n  private readonly _subscriber = Subscription.EMPTY;\n\n  constructor(el: ElementRef,\n              private renderer: Renderer2,\n              private hideNativeScrollbar: NativeScrollbarSizeFactory) {\n    this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe((size: number) => {\n      this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', `-${ size }px`, RendererStyleFlags2.DashCase);\n    });\n  }\n\n  ngOnDestroy() {\n    this._subscriber.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { NgScrollbarState } from '../ng-scrollbar.model';\n\n@Directive({ selector: '[ngAttr]' })\nexport class NgAttr {\n\n  constructor(private el: ElementRef) {\n  }\n\n  @Input() set ngAttr(attrs: NgScrollbarState) {\n    for (const [key, value] of Object.entries(attrs)) {\n      (this.el.nativeElement as HTMLElement).setAttribute(key, value);\n    }\n  }\n}\n","import { Directive, Input, Injectable, Inject, AfterContentInit, OnDestroy, NgZone, Output, EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { from, of, EMPTY, BehaviorSubject, Observable, Subscription, Observer } from 'rxjs';\nimport { catchError, debounceTime, map, switchMap } from 'rxjs/operators';\nimport { NgScrollbar } from '../ng-scrollbar';\n\n/**\n * Factory that initialize the ResizeObserver if available in the browser\n * Otherwise, it lazy-loads the ResizeObserver polyfill\n */\n@Injectable({ providedIn: 'root' })\nexport class ResizeObserverFactory {\n  private readonly resizeObserverSource = new BehaviorSubject<any>(null);\n  readonly resizeObserverLoader = this.resizeObserverSource.asObservable();\n\n  constructor(@Inject(DOCUMENT) document: any, platform: Platform) {\n    if (platform.isBrowser) {\n      const resizeObserverApi = document.defaultView.ResizeObserver\n        ? of(document.defaultView.ResizeObserver)\n        : from(import('@juggle/resize-observer')).pipe(\n          map((module: { ResizeObserver: any }) => module.ResizeObserver),\n          catchError((e) => {\n            console.log('Unable to load ResizeObserver polyfill', e);\n            return EMPTY;\n          }));\n      this.resizeObserverSource.next(resizeObserverApi);\n    }\n  }\n}\n\n@Directive({ selector: '[resizeSensor]' })\nexport class ResizeSensor implements AfterContentInit, OnDestroy {\n\n  /** Debounce interval for emitting the changes. */\n  @Input('sensorDebounce')\n  get debounce(): number {\n    return this._debounce;\n  }\n\n  set debounce(value: number) {\n    this._debounce = coerceNumberProperty(value);\n    this._subscribe();\n  }\n\n  private _debounce: number;\n\n  /** Whether ResizeObserver is disabled. */\n  @Input('sensorDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this._unsubscribe() : this._subscribe();\n  }\n\n  private _disabled: boolean = false;\n\n  private _subscription: Subscription | null = null;\n  private _resizeObserver: any;\n\n  @Output() resizeSensor = new EventEmitter<void>();\n\n  constructor(private zone: NgZone,\n              private platform: Platform,\n              private resizeObserverFactory: ResizeObserverFactory,\n              private scrollbar: NgScrollbar) {\n    if (!scrollbar) {\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\n    }\n  }\n\n  ngAfterContentInit() {\n    if (!this._subscription && !this._disabled) {\n      this._subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsubscribe();\n  }\n\n  private _createObserver(ResizeObserver: any): Observable<void> {\n    return new Observable((observer: Observer<void>) => {\n      this._resizeObserver = new ResizeObserver(() => observer.next());\n      this._resizeObserver.observe(this.scrollbar.viewport.nativeElement);\n      if (this.scrollbar.viewport.contentWrapperElement) {\n        this._resizeObserver.observe(this.scrollbar.viewport.contentWrapperElement);\n      }\n    });\n  }\n\n  private _subscribe() {\n    this._unsubscribe();\n    if (this.platform.isBrowser) {\n      this.zone.runOutsideAngular(() => {\n        this._subscription = this.resizeObserverFactory.resizeObserverLoader.pipe(\n          switchMap((moduleObservable: Observable<any>) => moduleObservable),\n          switchMap((ResizeObserver: any) => {\n            if (ResizeObserver) {\n              const stream = this._createObserver(ResizeObserver);\n              return this.debounce ? stream.pipe(debounceTime(this._debounce)) : stream;\n            } else {\n              return EMPTY;\n            }\n          })\n        ).subscribe(() => this.resizeSensor.emit());\n      });\n    }\n  }\n\n  private _unsubscribe() {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n    }\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n}\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { EMPTY, fromEvent, merge, Observable, of } from 'rxjs';\nimport { map, pluck, switchMap, tap } from 'rxjs/operators';\nimport { preventSelection, enableSelection, stopPropagation } from '../common';\nimport { NgScrollbar } from '../../ng-scrollbar';\n\nexport abstract class TrackAdapter {\n\n  // Stream that emits when the track element is clicked\n  get clicked(): Observable<any> {\n    const mouseDown = fromEvent(this.trackElement, 'mousedown', { passive: true }).pipe(\n      stopPropagation(),\n      preventSelection(this.document)\n    );\n    const mouseup = fromEvent(this.document, 'mouseup', { passive: true }).pipe(\n      stopPropagation(),\n      enableSelection(this.document),\n      switchMap(() => EMPTY)\n    );\n    return merge(mouseDown, mouseup);\n  }\n\n  // Stream that emits when the track element is hovered\n  get hovered(): Observable<boolean> {\n    const mouseEnter = fromEvent(this.trackElement, 'mouseenter', { passive: true }).pipe(\n      stopPropagation(),\n      map(() => true)\n    );\n    const mouseLeave = fromEvent(this.trackElement, 'mouseleave', { passive: true }).pipe(\n      stopPropagation(),\n      map(() => false)\n    );\n    return merge(mouseEnter, mouseLeave);\n  }\n\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\n  abstract get pageProperty(): string;\n\n  // Returns the track size, clientHeight or clientWidth\n  abstract get size(): number;\n\n  // Returns the start offset either 'clientRect.top' or 'clientRect.left'\n  abstract get offset(): number;\n\n  // Get track client rect\n  get clientRect(): ClientRect {\n    return this.trackElement.getBoundingClientRect();\n  }\n\n  protected constructor(protected cmp: NgScrollbar,\n                        protected trackElement: HTMLElement,\n                        protected document: any) {\n  }\n\n  /**\n   * Stream that emits when scrollbar track is clicked\n   */\n  onTrackClicked(e: any, thumbSize: number, scrollSize: number): Observable<any> {\n    return of(e).pipe(\n      pluck(this.pageProperty),\n      // Calculate scrollTo position\n      map((pageOffset: number) => {\n        const clickOffset = pageOffset - this.offset;\n        const offset = clickOffset - (thumbSize / 2);\n        const ratio = offset / this.size;\n        return ratio * scrollSize;\n      }),\n      // Smooth scroll to position\n      tap((value: number) => {\n        this.cmp.scrollTo({\n          ...this.mapToScrollToOption(value),\n          duration: coerceNumberProperty(this.cmp.trackClickScrollDuration)\n        });\n      })\n    );\n  }\n\n  protected abstract mapToScrollToOption(value: number): ScrollToOptions;\n}\n","import { Input, Output } from '@angular/core';\nimport { animationFrameScheduler, of, fromEvent, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, mergeMap, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { enableSelection, preventSelection, stopPropagation } from '../common';\nimport { NgScrollbar } from '../../ng-scrollbar';\nimport { TrackAdapter } from '../track/track';\n\nexport abstract class ThumbAdapter {\n\n  @Input() track: TrackAdapter;\n\n  // Stream that emits dragging state\n  private _dragging = new Subject<boolean>();\n  @Output() dragging = this._dragging.pipe(distinctUntilChanged());\n\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\n  protected abstract get pageProperty(): string;\n\n  // Returns either 'clientHeight' or 'clientWidth' according to scrollbar axis\n  protected abstract get clientProperty(): string;\n\n  abstract get dragStartOffset(): number;\n\n  // Returns thumb size, clientHeight or clientWidth\n  abstract get size(): number;\n\n  protected abstract get viewportScrollSize(): number;\n\n  protected abstract get viewportScrollOffset(): number;\n\n  abstract get viewportScrollMax(): number;\n\n  get trackMax(): number {\n    return this.track.size - this.size;\n  }\n\n  // Get thumb client rect\n  get clientRect(): ClientRect {\n    return this.thumbElement.getBoundingClientRect();\n  }\n\n  // Stream that emits when scrollbar thumb is clicked\n  get clicked(): Observable<any> {\n    return fromEvent(this.thumbElement, 'mousedown', { passive: true }).pipe(stopPropagation());\n  }\n\n  protected constructor(protected cmp: NgScrollbar,\n                        protected thumbElement: HTMLElement,\n                        protected document: any) {\n  }\n\n  // Calculate and update thumb position and size\n  update() {\n    const size = calculateThumbSize(this.track.size, this.viewportScrollSize, this.cmp.minThumbSize!);\n    const position = calculateThumbPosition(this.viewportScrollOffset, this.viewportScrollMax, this.trackMax);\n    animationFrameScheduler.schedule(() => this.updateStyles(this.handleDirection(position, this.trackMax), size));\n  }\n\n  /**\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\n   */\n  dragged(event: any): Observable<number> {\n    let trackMaxStart: number;\n    let scrollMaxStart: number;\n\n    const dragStart = of(event).pipe(\n      preventSelection(this.document),\n      tap(() => {\n        // Capture scrollMax and trackMax once\n        trackMaxStart = this.trackMax;\n        scrollMaxStart = this.viewportScrollMax;\n        this.setDragging(true);\n      }),\n    );\n\n    const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(stopPropagation());\n\n    const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(\n      stopPropagation(),\n      enableSelection(this.document),\n      tap(() => this.setDragging(false))\n    );\n\n    return dragStart.pipe(\n      pluck(this.pageProperty),\n      map((pageOffset: number) => pageOffset - this.dragStartOffset),\n      mergeMap((mouseDownOffset: number) => dragging.pipe(\n        pluck(this.clientProperty),\n        // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\n        map((mouseOffset: number) => mouseOffset - this.track.offset),\n        map((offset: number) => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart),\n        map((position: number) => this.handleDrag(position, scrollMaxStart)),\n        tap((position: number) => this.scrollTo(position)),\n        takeUntil(dragEnd)\n      ))\n    );\n  }\n\n  // Set dragging state\n  protected abstract setDragging(value: boolean): void;\n\n  // Scroll viewport instantly\n  protected abstract scrollTo(position: number): void;\n\n  // Update thumb element size and position\n  protected abstract updateStyles(position: number, size: number): void;\n\n  // Handle dragging position (Support LTR and RTL directions for the horizontal scrollbar)\n  protected abstract handleDrag(position: number, scrollMax?: number): number;\n\n  // Handle scrolling position (Support LTR and RTL directions for the horizontal scrollbar)\n  protected abstract handleDirection(position: number, scrollMax?: number): number;\n}\n\n/**\n * Calculate scrollbar thumb size\n */\nfunction calculateThumbSize(trackSize: number, contentSize: number, minThumbSize: number): number {\n  const scrollbarRatio = trackSize / contentSize;\n  const thumbSize = scrollbarRatio * trackSize;\n  return Math.max(~~thumbSize, minThumbSize);\n}\n\n/**\n * Calculate scrollbar thumb position\n */\nfunction calculateThumbPosition(scrollPosition: number, scrollMax: number, trackMax: number): number {\n  return scrollPosition * trackMax / scrollMax;\n}\n","import { Directive, Inject, ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NgScrollbar } from '../../ng-scrollbar';\nimport { ThumbAdapter } from './thumb';\n\n@Directive({ selector: '[scrollbarThumbX]' })\nexport class ThumbXDirective extends ThumbAdapter {\n\n  protected get clientProperty(): string {\n    return 'clientX';\n  }\n\n  protected get pageProperty(): string {\n    return 'pageX';\n  }\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollWidth;\n  }\n\n  protected get viewportScrollOffset(): number {\n    return this.cmp.viewport.scrollLeft;\n  }\n\n  get viewportScrollMax(): number {\n    return this.cmp.viewport.scrollMaxX;\n  }\n\n  get dragStartOffset(): number {\n    return this.clientRect.left;\n  }\n\n  get size(): number {\n    return this.thumbElement.clientWidth;\n  }\n\n  constructor(protected cmp: NgScrollbar,\n              protected element: ElementRef,\n              @Inject(DOCUMENT) protected document: any,\n              protected dir: Directionality) {\n    super(cmp, element.nativeElement, document);\n  }\n\n  protected updateStyles(position: number, size: number) {\n    this.thumbElement.style.width = `${size}px`;\n    this.thumbElement.style.transform = `translate3d(${position}px, 0, 0)`;\n  }\n\n  protected handleDrag(position: number, scrollMax: number): number {\n    if (this.dir.value === 'rtl') {\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n        return position - scrollMax;\n      }\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\n        return scrollMax - position;\n      }\n      // Keeping this as a memo\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\n      //   return position;\n      // }\n    }\n    return position;\n  }\n\n  protected handleDirection(position: number, trackMax: number): number {\n    if (this.dir.value === 'rtl') {\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\n        return -position;\n      }\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\n        return position - trackMax;\n      }\n      // Keeping this as a memo\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n      //   return position;\n      // }\n    }\n    return position;\n  }\n\n  protected setDragging(value: boolean): void {\n    this.cmp.setDragging({ horizontalDragging: value });\n  }\n\n  protected scrollTo(position: number): void {\n    this.cmp.viewport.scrollXTo(position);\n  }\n}\n\n@Directive({ selector: '[scrollbarThumbY]' })\nexport class ThumbYDirective extends ThumbAdapter {\n\n  protected get pageProperty(): string {\n    return 'pageY';\n  }\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollHeight;\n  }\n\n  protected get viewportScrollOffset(): number {\n    return this.cmp.viewport.scrollTop;\n  }\n\n  get viewportScrollMax(): number {\n    return this.cmp.viewport.scrollMaxY;\n  }\n\n  protected get clientProperty(): string {\n    return 'clientY';\n  }\n\n  get dragStartOffset(): number {\n    return this.clientRect.top;\n  }\n\n  get size(): number {\n    return this.thumbElement.clientHeight;\n  }\n\n  constructor(protected cmp: NgScrollbar,\n              protected element: ElementRef,\n              @Inject(DOCUMENT) protected document: any) {\n    super(cmp, element.nativeElement, document);\n  }\n\n\n  protected updateStyles(position: number, size: number): void {\n    this.thumbElement.style.height = `${size}px`;\n    this.thumbElement.style.transform = `translate3d(0px, ${position}px, 0)`;\n  }\n\n  protected handleDrag(position: number): number {\n    return position;\n  }\n\n  protected handleDirection(position: number): number {\n    return position;\n  }\n\n  protected setDragging(value: boolean): void {\n    this.cmp.setDragging({ verticalDragging: value });\n  }\n\n  protected scrollTo(position: number): void {\n    this.cmp.viewport.scrollYTo(position);\n  }\n}\n","import { Directive, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { TrackAdapter } from './track';\nimport { NgScrollbar } from '../../ng-scrollbar';\n\n@Directive({ selector: '[scrollbarTrackX]' })\nexport class TrackXDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageX';\n  }\n\n  get offset(): number {\n    return this.clientRect.left;\n  }\n\n  get size(): number {\n    return this.trackElement.clientWidth;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { left: value };\n  }\n}\n\n@Directive({ selector: '[scrollbarTrackY]' })\nexport class TrackYDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageY';\n  }\n\n  get offset(): number {\n    return this.clientRect.top;\n  }\n\n  get size(): number {\n    return this.trackElement.clientHeight;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { top: value };\n  }\n}\n","import { OnDestroy, OnInit, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { asyncScheduler, EMPTY, merge, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { NgScrollbar } from '../ng-scrollbar';\nimport { ThumbAdapter } from './thumb/thumb';\nimport { TrackAdapter } from './track/track';\nimport { isWithinBounds } from './common';\n\nexport abstract class Scrollbar implements OnInit, OnDestroy {\n\n  // Thumb directive reference\n  readonly thumb: ThumbAdapter;\n  // Track directive reference\n  readonly track: TrackAdapter;\n  // Stream that emits to unsubscribe from all streams\n  protected readonly destroyed = new Subject<void>();\n\n  /**\n   * Viewport pointer events\n   * The following streams are only activated when (pointerEventsMethod === 'viewport')\n   */\n  protected viewportTrackClicked!: Subject<any>;\n  protected viewportThumbClicked!: Subject<any>;\n\n  protected abstract get viewportScrollSize(): number;\n\n  protected constructor(public cmp: NgScrollbar, protected platform: Platform, protected document: any, protected zone: NgZone) {\n  }\n\n  /**\n   * Activate scrollbar pointer events\n   */\n  private activatePointerEvents(): Observable<any> {\n    // Stream that emits when scrollbar thumb is dragged\n    let thumbDragEvent: Observable<any> = EMPTY;\n    // Stream that emits when scrollbar track is clicked\n    let trackClickEvent: Observable<any> = EMPTY;\n    // Stream that emits when scrollbar track is hovered\n    let trackHoveredEvent: Observable<any> = EMPTY;\n\n    // Set the method used for the pointer events option\n    if (this.cmp.pointerEventsMethod === 'viewport') {\n      // Pointer events using the viewport\n      this.viewportTrackClicked = new Subject<any>();\n      this.viewportThumbClicked = new Subject<any>();\n\n      // Activate the pointer events of the viewport directive\n      this.cmp.viewport.activatePointerEvents(this.cmp.viewportPropagateMouseMove, this.destroyed);\n\n      // Set streams\n      thumbDragEvent = this.viewportThumbClicked;\n      trackClickEvent = this.viewportTrackClicked;\n      trackHoveredEvent = this.cmp.viewport.hovered.pipe(\n        // Check if track is hovered\n        map((e: any) => isWithinBounds(e, this.track.clientRect)),\n        distinctUntilChanged(),\n        // Enable / disable text selection\n        tap((hovered: boolean) => this.document.onselectstart = hovered ? () => false : null)\n      );\n\n      this.cmp.viewport.clicked.pipe(\n        tap((e: any) => {\n          if (e) {\n            if (isWithinBounds(e, this.thumb.clientRect)) {\n              this.viewportThumbClicked.next(e);\n            } else if (isWithinBounds(e, this.track.clientRect)) {\n              this.cmp.setClicked(true);\n              this.viewportTrackClicked.next(e);\n            }\n          } else {\n            this.cmp.setClicked(false);\n          }\n        }),\n        takeUntil(this.destroyed)\n      ).subscribe();\n    } else {\n      // Pointer events method is using 'scrollbar'\n      thumbDragEvent = this.thumb.clicked;\n      trackClickEvent = this.track.clicked;\n      trackHoveredEvent = this.track.hovered;\n    }\n\n    return merge(\n      // Activate scrollbar hovered event\n      trackHoveredEvent.pipe(tap((e: boolean) => this.setHovered(e))),\n      // Activate scrollbar thumb drag event\n      thumbDragEvent.pipe(switchMap((e: any) => this.thumb.dragged(e))),\n      // Activate scrollbar track click event\n      trackClickEvent.pipe(switchMap((e: any) => this.track.onTrackClicked(e, this.thumb.size, this.viewportScrollSize)))\n    );\n  }\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      // Activate pointer events on Desktop only\n      if (!(this.platform.IOS || this.platform.ANDROID) && !this.cmp.pointerEventsDisabled) {\n        this.activatePointerEvents().pipe(takeUntil(this.destroyed)).subscribe();\n      }\n\n      // Stream that emits when host component is updated\n      const updated = this.cmp.updated.pipe(tap(() => this.onUpdated()));\n\n      // Update scrollbar thumb when viewport is scrolled and when scrollbar component is updated\n      merge(this.cmp.scrolled, updated).pipe(\n        tap(() => this.thumb.update()),\n        takeUntil(this.destroyed)\n      ).subscribe();\n\n      // Initialize scrollbar\n      asyncScheduler.schedule(() => this.thumb.update(), 100);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    // Clean up viewport streams if used\n    if (this.viewportThumbClicked && this.viewportTrackClicked) {\n      this.viewportTrackClicked.complete();\n      this.viewportThumbClicked.complete();\n    }\n  }\n\n  protected abstract setHovered(value: boolean): void;\n\n  protected abstract onUpdated(): void;\n}\n","import { Component, Inject, NgZone, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { TrackXDirective, TrackYDirective } from './track/track.directive';\nimport { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';\nimport { NgScrollbar } from '../ng-scrollbar';\nimport { Scrollbar } from './scrollbar';\n\n@Component({\n  selector: 'scrollbar-y',\n  host: { '[class.scrollbar-control]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./vertical.scss'],\n  template: `\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\n      <div scrollbarThumbY [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\n    </div>\n  `\n})\nexport class ScrollbarY extends Scrollbar {\n\n  @ViewChild(TrackYDirective, { static: true }) readonly track: TrackYDirective;\n  @ViewChild(ThumbYDirective, { static: true }) readonly thumb: ThumbYDirective;\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollHeight;\n  }\n\n  constructor(public cmp: NgScrollbar, protected platform: Platform, @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\n    super(cmp, platform, document, zone);\n  }\n\n  protected setHovered(value: boolean): void {\n    this.cmp.setHovered({ verticalHovered: value });\n  }\n\n  onUpdated(): void {\n  }\n}\n\n@Component({\n  selector: 'scrollbar-x',\n  host: { '[class.scrollbar-control]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./horizontal.scss'],\n  template: `\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\n      <div scrollbarThumbX [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\n    </div>\n  `\n})\nexport class ScrollbarX extends Scrollbar {\n\n  @ViewChild(TrackXDirective, { static: true }) readonly track: TrackXDirective;\n  @ViewChild(ThumbXDirective, { static: true }) readonly thumb: ThumbXDirective;\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollWidth;\n  }\n\n  get thickness(): number {\n    return this.el.nativeElement.clientHeight;\n  }\n\n  constructor(private el: ElementRef,\n              public cmp: NgScrollbar,\n              protected platform: Platform,\n              @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\n    super(cmp, platform, document, zone);\n  }\n\n  protected setHovered(value: boolean): void {\n    this.cmp.setHovered({ horizontalHovered: value });\n  }\n\n  onUpdated(): void {\n    // Auto-height: Set root component height to content height\n    this.cmp.nativeElement.style.height = this.cmp.appearance === 'standard'\n      ? `${this.cmp.viewport.contentHeight + this.thickness}px`\n      : `${this.cmp.viewport.contentHeight}px`;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\n// Uncomment the following line in development mode\n// import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';\n\nimport { NgScrollbar } from './ng-scrollbar';\nimport { HideNativeScrollbar } from './utils/hide-native-scrollbar';\nimport { NgAttr } from './utils/ng-attr.directive';\nimport { ResizeSensor } from './utils/resize-sensor.directive';\nimport { ThumbYDirective, ThumbXDirective } from './scrollbar/thumb/thumb.directive';\nimport { TrackXDirective, TrackYDirective } from './scrollbar/track/track.directive';\nimport { ScrollbarX, ScrollbarY } from './scrollbar/scrollbar.component';\nimport { ScrollViewport } from './scroll-viewport';\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from './ng-scrollbar.model';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BidiModule,\n    PortalModule,\n    PlatformModule,\n    SmoothScrollModule\n  ],\n  declarations: [\n    NgScrollbar,\n    ScrollViewport,\n    HideNativeScrollbar,\n    NgAttr,\n    ResizeSensor,\n    ThumbYDirective,\n    ThumbXDirective,\n    TrackXDirective,\n    TrackYDirective,\n    ScrollbarY,\n    ScrollbarX\n  ],\n  exports: [\n    NgScrollbar,\n    ScrollViewport\n  ]\n})\nexport class NgScrollbarModule {\n  static withConfig(options: NgScrollbarOptions): ModuleWithProviders<NgScrollbarModule> {\n    return {\n      ngModule: NgScrollbarModule,\n      providers: [\n        { provide: NG_SCROLLBAR_OPTIONS, useValue: options }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of ngx-scrollbar\n */\n\nexport * from './lib/ng-scrollbar.module';\nexport * from './lib/ng-scrollbar.model';\nexport * from './lib/ng-scrollbar';\nexport * from './lib/scroll-viewport';\nexport * from './lib/utils/scrollbar-manager';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {Scrollbar as ɵn} from './lib/scrollbar/scrollbar';\nexport {ScrollbarX as ɵm,ScrollbarY as ɵl} from './lib/scrollbar/scrollbar.component';\nexport {ThumbAdapter as ɵh} from './lib/scrollbar/thumb/thumb';\nexport {ThumbXDirective as ɵf,ThumbYDirective as ɵg} from './lib/scrollbar/thumb/thumb.directive';\nexport {TrackAdapter as ɵk} from './lib/scrollbar/track/track';\nexport {TrackXDirective as ɵi,TrackYDirective as ɵj} from './lib/scrollbar/track/track.directive';\nexport {HideNativeScrollbar as ɵa} from './lib/utils/hide-native-scrollbar';\nexport {NativeScrollbarSizeFactory as ɵb} from './lib/utils/native-scrollbar-size-factory';\nexport {NgAttr as ɵc} from './lib/utils/ng-attr.directive';\nexport {ResizeObserverFactory as ɵd,ResizeSensor as ɵe} from './lib/utils/resize-sensor.directive';"],"names":[],"mappings":"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"}
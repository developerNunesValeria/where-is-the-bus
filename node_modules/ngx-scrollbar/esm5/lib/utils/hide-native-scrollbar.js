import { __decorate, __metadata } from "tslib";
import { Directive, ElementRef, Renderer2, RendererStyleFlags2, OnDestroy } from '@angular/core';
import { Subscription } from 'rxjs';
import { NativeScrollbarSizeFactory } from './native-scrollbar-size-factory';
var HideNativeScrollbar = /** @class */ (function () {
    function HideNativeScrollbar(el, renderer, hideNativeScrollbar) {
        var _this = this;
        this.renderer = renderer;
        this.hideNativeScrollbar = hideNativeScrollbar;
        this._subscriber = Subscription.EMPTY;
        this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe(function (size) {
            _this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', "-" + size + "px", RendererStyleFlags2.DashCase);
        });
    }
    HideNativeScrollbar.prototype.ngOnDestroy = function () {
        this._subscriber.unsubscribe();
    };
    HideNativeScrollbar.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: NativeScrollbarSizeFactory }
    ]; };
    HideNativeScrollbar = __decorate([
        Directive({
            selector: '[hideNativeScrollbar]'
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2,
            NativeScrollbarSizeFactory])
    ], HideNativeScrollbar);
    return HideNativeScrollbar;
}());
export { HideNativeScrollbar };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS1uYXRpdmUtc2Nyb2xsYmFyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNjcm9sbGJhci8iLCJzb3VyY2VzIjpbImxpYi91dGlscy9oaWRlLW5hdGl2ZS1zY3JvbGxiYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBRSxtQkFBbUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakcsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNwQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUs3RTtJQUlFLDZCQUFZLEVBQWMsRUFDTixRQUFtQixFQUNuQixtQkFBK0M7UUFGbkUsaUJBTUM7UUFMbUIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQTRCO1FBSmxELGdCQUFXLEdBQUcsWUFBWSxDQUFDLEtBQUssQ0FBQztRQUtoRCxJQUFJLENBQUMsV0FBVyxHQUFHLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxTQUFTLENBQUMsVUFBQyxJQUFZO1lBQzFFLEtBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUseUJBQXlCLEVBQUUsTUFBSyxJQUFJLE9BQUssRUFBRSxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNwSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCx5Q0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNqQyxDQUFDOztnQkFWZSxVQUFVO2dCQUNJLFNBQVM7Z0JBQ0UsMEJBQTBCOztJQU54RCxtQkFBbUI7UUFIL0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHVCQUF1QjtTQUNsQyxDQUFDO3lDQUtnQixVQUFVO1lBQ0ksU0FBUztZQUNFLDBCQUEwQjtPQU54RCxtQkFBbUIsQ0FlL0I7SUFBRCwwQkFBQztDQUFBLEFBZkQsSUFlQztTQWZZLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBSZW5kZXJlclN0eWxlRmxhZ3MyLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmF0aXZlU2Nyb2xsYmFyU2l6ZUZhY3RvcnkgfSBmcm9tICcuL25hdGl2ZS1zY3JvbGxiYXItc2l6ZS1mYWN0b3J5JztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW2hpZGVOYXRpdmVTY3JvbGxiYXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBIaWRlTmF0aXZlU2Nyb2xsYmFyIGltcGxlbWVudHMgT25EZXN0cm95IHtcblxuICBwcml2YXRlIHJlYWRvbmx5IF9zdWJzY3JpYmVyID0gU3Vic2NyaXB0aW9uLkVNUFRZO1xuXG4gIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLFxuICAgICAgICAgICAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXG4gICAgICAgICAgICAgIHByaXZhdGUgaGlkZU5hdGl2ZVNjcm9sbGJhcjogTmF0aXZlU2Nyb2xsYmFyU2l6ZUZhY3RvcnkpIHtcbiAgICB0aGlzLl9zdWJzY3JpYmVyID0gaGlkZU5hdGl2ZVNjcm9sbGJhci5zY3JvbGxiYXJTaXplLnN1YnNjcmliZSgoc2l6ZTogbnVtYmVyKSA9PiB7XG4gICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKGVsLm5hdGl2ZUVsZW1lbnQsICctLW5hdGl2ZS1zY3JvbGxiYXItc2l6ZScsIGAtJHsgc2l6ZSB9cHhgLCBSZW5kZXJlclN0eWxlRmxhZ3MyLkRhc2hDYXNlKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX3N1YnNjcmliZXIudW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIl19
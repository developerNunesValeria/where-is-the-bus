import { __decorate, __metadata, __read, __values } from "tslib";
import { Directive, ElementRef, Input } from '@angular/core';
var NgAttr = /** @class */ (function () {
    function NgAttr(el) {
        this.el = el;
    }
    Object.defineProperty(NgAttr.prototype, "ngAttr", {
        set: function (attrs) {
            var e_1, _a;
            try {
                for (var _b = __values(Object.entries(attrs)), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var _d = __read(_c.value, 2), key = _d[0], value = _d[1];
                    this.el.nativeElement.setAttribute(key, value);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
        },
        enumerable: true,
        configurable: true
    });
    NgAttr.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [Object])
    ], NgAttr.prototype, "ngAttr", null);
    NgAttr = __decorate([
        Directive({ selector: '[ngAttr]' }),
        __metadata("design:paramtypes", [ElementRef])
    ], NgAttr);
    return NgAttr;
}());
export { NgAttr };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctYXR0ci5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc2Nyb2xsYmFyLyIsInNvdXJjZXMiOlsibGliL3V0aWxzL25nLWF0dHIuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJN0Q7SUFFRSxnQkFBb0IsRUFBYztRQUFkLE9BQUUsR0FBRixFQUFFLENBQVk7SUFDbEMsQ0FBQztJQUVRLHNCQUFJLDBCQUFNO2FBQVYsVUFBVyxLQUF1Qjs7O2dCQUN6QyxLQUEyQixJQUFBLEtBQUEsU0FBQSxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFBLGdCQUFBLDRCQUFFO29CQUF2QyxJQUFBLHdCQUFZLEVBQVgsV0FBRyxFQUFFLGFBQUs7b0JBQ25CLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBNkIsQ0FBQyxZQUFZLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO2lCQUNqRTs7Ozs7Ozs7O1FBQ0gsQ0FBQzs7O09BQUE7O2dCQVB1QixVQUFVOztJQUd6QjtRQUFSLEtBQUssRUFBRTs7O3dDQUlQO0lBVFUsTUFBTTtRQURsQixTQUFTLENBQUMsRUFBRSxRQUFRLEVBQUUsVUFBVSxFQUFFLENBQUM7eUNBR1YsVUFBVTtPQUZ2QixNQUFNLENBVWxCO0lBQUQsYUFBQztDQUFBLEFBVkQsSUFVQztTQVZZLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZ1Njcm9sbGJhclN0YXRlIH0gZnJvbSAnLi4vbmctc2Nyb2xsYmFyLm1vZGVsJztcblxuQERpcmVjdGl2ZSh7IHNlbGVjdG9yOiAnW25nQXR0cl0nIH0pXG5leHBvcnQgY2xhc3MgTmdBdHRyIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmKSB7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgbmdBdHRyKGF0dHJzOiBOZ1Njcm9sbGJhclN0YXRlKSB7XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoYXR0cnMpKSB7XG4gICAgICAodGhpcy5lbC5uYXRpdmVFbGVtZW50IGFzIEhUTUxFbGVtZW50KS5zZXRBdHRyaWJ1dGUoa2V5LCB2YWx1ZSk7XG4gICAgfVxuICB9XG59XG4iXX0=
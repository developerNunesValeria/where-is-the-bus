import { __assign, __decorate, __metadata, __read } from "tslib";
import { Component, Input, Output, ViewChild, ContentChild, OnInit, AfterViewChecked, OnDestroy, NgZone, ElementRef, EventEmitter, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';
import { Directionality } from '@angular/cdk/bidi';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { fromEvent, Observable, Subject } from 'rxjs';
import { auditTime, filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';
import { ScrollViewport } from './scroll-viewport';
import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';
import { ScrollbarManager } from './utils/scrollbar-manager';
var NgScrollbar = /** @class */ (function () {
    function NgScrollbar(el, zone, changeDetectorRef, dir, smoothScroll, manager) {
        this.el = el;
        this.zone = zone;
        this.changeDetectorRef = changeDetectorRef;
        this.dir = dir;
        this.smoothScroll = smoothScroll;
        this.manager = manager;
        this._disabled = false;
        this._sensorDisabled = this.manager.globalOptions.sensorDisabled;
        this._pointerEventsDisabled = this.manager.globalOptions.pointerEventsDisabled;
        this._viewportPropagateMouseMove = this.manager.globalOptions.viewportPropagateMouseMove;
        /** A class forwarded to scrollable viewport element */
        this.viewClass = this.manager.globalOptions.viewClass;
        /** A class forwarded to the scrollbar track element */
        this.trackClass = this.manager.globalOptions.trackClass;
        /** A class forwarded to the scrollbar thumb element */
        this.thumbClass = this.manager.globalOptions.thumbClass;
        /** Minimum scrollbar thumb size */
        this.minThumbSize = this.manager.globalOptions.minThumbSize;
        /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */
        this.trackClickScrollDuration = this.manager.globalOptions.trackClickScrollDuration;
        /**
         * Sets the pointer events method
         * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)
         * Use scrollbar pointer events to handle dragging and track click
         */
        this.pointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;
        /**
         * Sets the supported scroll track of the viewport, there are 3 options:
         *
         * - `vertical` Use both vertical and horizontal scrollbar
         * - `horizontal` Use both vertical and horizontal scrollbar
         * - `all` Use both vertical and horizontal scrollbar
         */
        this.track = this.manager.globalOptions.track;
        /**
         * When to show the scrollbar, and there are 3 options:
         *
         * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar
         * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering
         * - `always` Scrollbars are always shown even if the viewport is not scrollable
         */
        this.visibility = this.manager.globalOptions.visibility;
        /**
         *  Sets the appearance of the scrollbar, there are 2 options:
         *
         * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.
         * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.
         */
        this.appearance = this.manager.globalOptions.appearance;
        /**
         * Sets the position of each scrollbar, there are 4 options:
         *
         * - `native` (Default) Use the default position like in native scrollbar.
         * - `invertY` Inverts vertical scrollbar position
         * - `invertX` Inverts Horizontal scrollbar position
         * - `invertAll` Inverts both scrollbar positions
         */
        this.position = this.manager.globalOptions.position;
        /** Debounce interval for detecting changes via ResizeObserver */
        this.sensorDebounce = this.manager.globalOptions.sensorDebounce;
        /** Scroll Audit Time */
        this.scrollAuditTime = this.manager.globalOptions.scrollAuditTime;
        /** Steam that emits when scrollbar is updated */
        this.updated = new EventEmitter();
        /** Set of attributes added on the scrollbar wrapper */
        this.state = {};
        /** Stream that destroys components' observables */
        this.destroyed = new Subject();
    }
    Object.defineProperty(NgScrollbar.prototype, "disabled", {
        /** Disable custom scrollbar and switch back to native scrollbar */
        get: function () {
            return this._disabled;
        },
        set: function (disabled) {
            this._disabled = coerceBooleanProperty(disabled);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrollbar.prototype, "sensorDisabled", {
        /** Whether ResizeObserver is disabled */
        get: function () {
            return this._sensorDisabled;
        },
        set: function (disabled) {
            this._sensorDisabled = coerceBooleanProperty(disabled);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrollbar.prototype, "pointerEventsDisabled", {
        /** A flag used to enable/disable the scrollbar thumb dragged event */
        get: function () {
            return this._pointerEventsDisabled;
        },
        set: function (disabled) {
            this._pointerEventsDisabled = coerceBooleanProperty(disabled);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrollbar.prototype, "viewportPropagateMouseMove", {
        /** Enable viewport mousemove event propagation (only when pointerEventsMethod="viewport") */
        get: function () {
            return this._viewportPropagateMouseMove;
        },
        set: function (disabled) {
            this._viewportPropagateMouseMove = coerceBooleanProperty(disabled);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgScrollbar.prototype, "nativeElement", {
        get: function () {
            return this.el.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Update local state with each change detection
     */
    NgScrollbar.prototype.updateState = function () {
        var verticalUsed = false;
        var horizontalUsed = false;
        var isVerticallyScrollable = false;
        var isHorizontallyScrollable = false;
        // Check if vertical scrollbar should be displayed
        if (this.track === 'all' || this.track === 'vertical') {
            isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;
            verticalUsed = this.visibility === 'always' || isVerticallyScrollable;
        }
        // Check if horizontal scrollbar should be displayed
        if (this.track === 'all' || this.track === 'horizontal') {
            isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;
            horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;
        }
        // Update inner wrapper attributes
        this._updateState({
            position: this.position,
            track: this.track,
            appearance: this.appearance,
            visibility: this.visibility,
            deactivated: this.disabled,
            dir: this.dir.value,
            pointerEventsMethod: this.pointerEventsMethod,
            verticalUsed: verticalUsed,
            horizontalUsed: horizontalUsed,
            isVerticallyScrollable: isVerticallyScrollable,
            isHorizontallyScrollable: isHorizontallyScrollable
        });
    };
    NgScrollbar.prototype._updateState = function (state) {
        this.state = __assign(__assign({}, this.state), state);
        this.changeDetectorRef.detectChanges();
    };
    NgScrollbar.prototype.getScrolledByDirection = function (property) {
        var event;
        return this.scrolled.pipe(tap(function (e) { return event = e; }), pluck('target', property), pairwise(), filter(function (_a) {
            var _b = __read(_a, 2), prev = _b[0], curr = _b[1];
            return prev !== curr;
        }), map(function () { return event; }));
    };
    /**
     * Set hovered state if a scrollbar is being hovered
     */
    NgScrollbar.prototype.setHovered = function (hovered) {
        var _this = this;
        this.zone.run(function () { return _this._updateState(__assign({}, hovered)); });
    };
    /**
     * Set dragging state if a scrollbar is being dragged
     */
    NgScrollbar.prototype.setDragging = function (dragging) {
        var _this = this;
        this.zone.run(function () { return _this._updateState(__assign({}, dragging)); });
    };
    /**
     * Set clicked state if a scrollbar track is being click
     */
    NgScrollbar.prototype.setClicked = function (scrollbarClicked) {
        var _this = this;
        this.zone.run(function () { return _this._updateState({ scrollbarClicked: scrollbarClicked }); });
    };
    NgScrollbar.prototype.ngOnInit = function () {
        var _this = this;
        // Set the viewport based on user choice
        this.zone.runOutsideAngular(function () {
            if (_this.customViewPort) {
                _this.viewport = _this.customViewPort;
                _this.defaultViewPort.setAsWrapper();
            }
            else {
                _this.viewport = _this.defaultViewPort;
            }
            // Activate the selected viewport
            _this.viewport.setAsViewport(_this.viewClass);
            var scrollStream = fromEvent(_this.viewport.nativeElement, 'scroll', { passive: true });
            // Throttle scroll event if 'scrollAuditTime' is set
            scrollStream = _this.scrollAuditTime ? scrollStream.pipe(auditTime(_this.scrollAuditTime)) : scrollStream;
            // Initialize scroll streams
            _this.scrolled = new Observable(function (subscriber) {
                return scrollStream.pipe(takeUntil(_this.destroyed)).subscribe(subscriber);
            });
            _this.verticalScrolled = _this.getScrolledByDirection('scrollTop');
            _this.horizontalScrolled = _this.getScrolledByDirection('scrollLeft');
        });
    };
    NgScrollbar.prototype.ngAfterViewChecked = function () {
        this.updateState();
    };
    NgScrollbar.prototype.ngOnDestroy = function () {
        this.destroyed.next();
        this.destroyed.complete();
    };
    /**
     * Update local state and the internal scrollbar controls
     */
    NgScrollbar.prototype.update = function () {
        if (!this.state.horizontalUsed) {
            // Auto-height: Set component height to content height
            this.nativeElement.style.height = this.viewport.contentHeight + "px";
        }
        this.updated.next();
        this.changeDetectorRef.detectChanges();
    };
    /**
     * Smooth scroll functions
     */
    NgScrollbar.prototype.scrollTo = function (options) {
        return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);
    };
    /**
     * Scroll to element by reference or selector
     */
    NgScrollbar.prototype.scrollToElement = function (target, options) {
        return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);
    };
    NgScrollbar.ctorParameters = function () { return [
        { type: ElementRef },
        { type: NgZone },
        { type: ChangeDetectorRef },
        { type: Directionality },
        { type: SmoothScrollManager },
        { type: ScrollbarManager }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], NgScrollbar.prototype, "disabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], NgScrollbar.prototype, "sensorDisabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], NgScrollbar.prototype, "pointerEventsDisabled", null);
    __decorate([
        Input(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], NgScrollbar.prototype, "viewportPropagateMouseMove", null);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "viewClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "trackClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "thumbClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgScrollbar.prototype, "minThumbSize", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgScrollbar.prototype, "trackClickScrollDuration", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "pointerEventsMethod", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "track", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "visibility", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "appearance", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], NgScrollbar.prototype, "position", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgScrollbar.prototype, "sensorDebounce", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], NgScrollbar.prototype, "scrollAuditTime", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], NgScrollbar.prototype, "updated", void 0);
    __decorate([
        ViewChild(ScrollViewport, { static: true }),
        __metadata("design:type", ScrollViewport)
    ], NgScrollbar.prototype, "defaultViewPort", void 0);
    __decorate([
        ContentChild(ScrollViewport, { static: true }),
        __metadata("design:type", ScrollViewport)
    ], NgScrollbar.prototype, "customViewPort", void 0);
    NgScrollbar = __decorate([
        Component({
            selector: 'ng-scrollbar',
            exportAs: 'ngScrollbar',
            template: "<div class=\"ng-scrollbar-wrapper\" [ngAttr]=\"state\">\n  <div class=\"ng-scroll-viewport-wrapper\"\n       (resizeSensor)=\"update()\"\n       [sensorDebounce]=\"sensorDebounce\"\n       [sensorDisabled]=\"sensorDisabled\">\n    <div scrollViewport\n         hideNativeScrollbar>\n      <div>\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n  <ng-container *ngIf=\"!disabled\">\n    <scrollbar-x *ngIf=\"state.horizontalUsed\"\n                 [attr.scrollable]=\"state.isHorizontallyScrollable\"\n                 [attr.fit]=\"state.verticalUsed\">\n    </scrollbar-x>\n    <scrollbar-y *ngIf=\"state.verticalUsed\"\n                 [attr.scrollable]=\"state.isVerticallyScrollable\"\n                 [attr.fit]=\"state.horizontalUsed\">\n    </scrollbar-y>\n  </ng-container>\n</div>\n\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            host: { '[class.ng-scrollbar]': 'true' },
            styles: ["::ng-deep .ng-scrollbar-measure{left:0;overflow:scroll;position:fixed;top:-9999px;scrollbar-width:none;-ms-overflow-style:none}::ng-deep .ng-scrollbar-measure::-webkit-scrollbar{display:none}:host{--scrollbar-border-radius:7px;--scrollbar-padding:4px;--scrollbar-track-color:transparent;--scrollbar-thumb-color:rgba(0, 0, 0, 0.2);--scrollbar-thumb-hover-color:var(--scrollbar-thumb-color);--scrollbar-size:5px;--scrollbar-hover-size:var(--scrollbar-size);--scrollbar-thumb-transition:height ease-out 150ms,width ease-out 150ms;--scrollbar-track-transition:height ease-out 150ms,width ease-out 150ms;display:block;position:relative;height:100%;max-height:100%;max-width:100%}:host>.ng-scrollbar-wrapper{--scrollbar-total-size:calc(var(--scrollbar-size) + var(--scrollbar-padding) * 2);--vertical-scrollbar-size:var(--scrollbar-size);--horizontal-scrollbar-size:var(--scrollbar-size);--vertical-scrollbar-total-size:calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);--horizontal-scrollbar-total-size:calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2)}:host>.ng-scrollbar-wrapper[verticalDragging=true],:host>.ng-scrollbar-wrapper[verticalHovered=true]{--vertical-scrollbar-size:var(--scrollbar-hover-size);--vertical-scrollbar-total-size:calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[horizontalDragging=true],:host>.ng-scrollbar-wrapper[horizontalHovered=true]{--horizontal-scrollbar-size:var(--scrollbar-hover-size);--horizontal-scrollbar-total-size:calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:0;bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:var(--scrollbar-total-size);bottom:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{padding-top:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{scrollbar-width:none;-ms-overflow-style:none}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport::-webkit-scrollbar,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport::-webkit-scrollbar{display:none}:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider{bottom:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider{left:0;right:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider{right:0;left:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]>.scrollbar-control{opacity:0;transition-property:opacity;transition-duration:.4s;transition-delay:.8s}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:active>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:focus>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:hover>.scrollbar-control{opacity:1;transition-duration:.4s;transition-delay:0s}:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{overflow-x:auto;overflow-y:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{overflow-y:auto;overflow-x:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{overflow:auto}.ng-scroll-viewport-wrapper{overflow:hidden}.ng-scroll-viewport{-webkit-overflow-scrolling:touch;contain:strict;will-change:scroll-position}::ng-deep .ng-scroll-content{position:relative!important;display:inline-block;min-width:100%}.ng-scroll-layer,.ng-scroll-viewport-wrapper,.ng-scrollbar-wrapper,::ng-deep .ng-scroll-viewport{position:absolute;left:0;right:0;top:0;bottom:0}", "::ng-deep .ng-scrollbar-wrapper[pointerEventsMethod=viewport]>.scrollbar-control{pointer-events:none}::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control{position:absolute;display:flex;justify-content:center;align-items:center;transition:var(--scrollbar-track-transition)}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control[scrollable=false] .ng-scrollbar-thumb{display:none}::ng-deep .ng-scrollbar-track{height:100%;width:100%;z-index:1;border-radius:var(--scrollbar-border-radius);background-color:var(--scrollbar-track-color);overflow:hidden;transition:var(--scrollbar-track-transition);cursor:default}::ng-deep .ng-scrollbar-thumb{box-sizing:border-box;position:relative;border-radius:inherit;background-color:var(--scrollbar-thumb-color);transform:translateZ(0);transition:var(--scrollbar-thumb-transition)}"]
        }),
        __metadata("design:paramtypes", [ElementRef,
            NgZone,
            ChangeDetectorRef,
            Directionality,
            SmoothScrollManager,
            ScrollbarManager])
    ], NgScrollbar);
    return NgScrollbar;
}());
export { NgScrollbar };
//# sourceMappingURL=data:application/json;base64,
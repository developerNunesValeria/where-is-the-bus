{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-scrollbar/lib/scrollbar/common.ts","ng://ngx-scrollbar/lib/scroll-viewport.ts","ng://ngx-scrollbar/lib/ng-scrollbar.model.ts","ng://ngx-scrollbar/lib/utils/scrollbar-manager.ts","ng://ngx-scrollbar/lib/ng-scrollbar.ts","ng://ngx-scrollbar/lib/utils/native-scrollbar-size-factory.ts","ng://ngx-scrollbar/lib/utils/hide-native-scrollbar.ts","ng://ngx-scrollbar/lib/utils/ng-attr.directive.ts","ng://ngx-scrollbar/lib/utils/resize-sensor.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.ts","ng://ngx-scrollbar/lib/scrollbar/thumb/thumb.directive.ts","ng://ngx-scrollbar/lib/scrollbar/track/track.directive.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.ts","ng://ngx-scrollbar/lib/scrollbar/scrollbar.component.ts","ng://ngx-scrollbar/lib/ng-scrollbar.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","preventSelection","doc","tap","onselectstart","enableSelection","stopPropagation","isWithinBounds","rect","clientX","left","width","clientY","top","height","ScrollViewport","viewPort","document","nativeElement","clientHeight","clientWidth","scrollHeight","scrollWidth","scrollTop","scrollLeft","contentWrapperElement","activatePointerEvents","propagate","destroyed","_this","hovered","Observable","subscriber","mouseMoveStream","fromEvent","passive","mouseMove","pipe","mouseLeave","map","merge","takeUntil","subscribe","clicked","mouseDown","mouseUp","switchMap","setAsWrapper","className","firstElementChild","setAsViewport","customClassName","classList","add","scrollYTo","scrollXTo","ElementRef","Inject","args","DOCUMENT","Directive","selector","NG_SCROLLBAR_OPTIONS","InjectionToken","defaultOptions","viewClass","trackClass","thumbClass","track","appearance","visibility","position","pointerEventsMethod","trackClickScrollDuration","minThumbSize","windowResizeDebounce","sensorDebounce","scrollAuditTime","viewportPropagateMouseMove","ScrollbarManager","options","globalOptions","rtlScrollAxisType","getRtlScrollAxisType","Optional","type","Injectable","providedIn","NgScrollbar","el","zone","changeDetectorRef","dir","smoothScroll","manager","_disabled","_sensorDisabled","sensorDisabled","_pointerEventsDisabled","pointerEventsDisabled","_viewportPropagateMouseMove","updated","EventEmitter","state","Subject","disabled","coerceBooleanProperty","updateState","verticalUsed","horizontalUsed","isVerticallyScrollable","isHorizontallyScrollable","viewport","_updateState","deactivated","detectChanges","getScrolledByDirection","property","event","scrolled","pluck","pairwise","filter","_a","_b","setHovered","run","setDragging","dragging","setClicked","scrollbarClicked","ngOnInit","runOutsideAngular","customViewPort","defaultViewPort","scrollStream","auditTime","verticalScrolled","horizontalScrolled","ngAfterViewChecked","ngOnDestroy","complete","update","style","contentHeight","scrollTo","scrollToElement","NgZone","ChangeDetectorRef","Directionality","SmoothScrollManager","Input","Output","ViewChild","static","ContentChild","Component","exportAs","template","changeDetection","ChangeDetectionStrategy","OnPush","host","[class.ng-scrollbar]","NativeScrollbarSizeFactory","platform","_scrollbarSize","BehaviorSubject","getNativeScrollbarSize","scrollbarSize","asObservable","isBrowser","defaultView","debounceTime","distinctUntilChanged","size","IOS","box","createElement","body","appendChild","getBoundingClientRect","right","removeChild","Platform","HideNativeScrollbar","renderer","hideNativeScrollbar","_subscriber","Subscription","EMPTY","setStyle","RendererStyleFlags2","DashCase","unsubscribe","Renderer2","NgAttr","attrs","entries","_c","_d","setAttribute","ResizeObserverFactory","resizeObserverSource","resizeObserverLoader","resizeObserverApi","ResizeObserver","of","from","import","module","catchError","console","log","ResizeSensor","resizeObserverFactory","scrollbar","_subscription","resizeSensor","Error","_debounce","coerceNumberProperty","_subscribe","_unsubscribe","ngAfterContentInit","_createObserver","observer","_resizeObserver","observe","moduleObservable","stream","debounce","emit","disconnect","TrackAdapter","cmp","trackElement","mouseup","mouseEnter","onTrackClicked","thumbSize","scrollSize","pageProperty","pageOffset","offset","mapToScrollToOption","duration","ThumbAdapter","thumbElement","_dragging","trackSize","contentSize","scrollPosition","scrollMax","trackMax","viewportScrollSize","Math","max","viewportScrollOffset","viewportScrollMax","animationFrameScheduler","schedule","updateStyles","handleDirection","dragged","trackMaxStart","scrollMaxStart","dragStart","capture","dragEnd","dragStartOffset","mergeMap","mouseDownOffset","clientProperty","mouseOffset","handleDrag","ThumbXDirective","element","_super","scrollMaxX","clientRect","transform","horizontalDragging","ThumbYDirective","scrollMaxY","verticalDragging","TrackXDirective","TrackYDirective","Scrollbar","thumbDragEvent","trackClickEvent","trackHoveredEvent","viewportTrackClicked","viewportThumbClicked","thumb","ANDROID","onUpdated","asyncScheduler","ScrollbarY","verticalHovered","[class.scrollbar-control]","ScrollbarX","horizontalHovered","thickness","NgScrollbarModule","withConfig","ngModule","NgScrollbarModule_1","providers","provide","useValue","NgModule","imports","CommonModule","BidiModule","PortalModule","PlatformModule","SmoothScrollModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { tap } from 'rxjs/operators';\n\nexport function preventSelection(doc: any) {\n  return tap(() => {\n    doc.onselectstart = () => false;\n  });\n}\n\nexport function enableSelection(doc: any) {\n  return tap(() => {\n    doc.onselectstart = null;\n  });\n}\n\nexport function stopPropagation() {\n  return tap((e: any) => e.stopPropagation());\n}\n\n/**\n * Check if pointer is within scrollbar bounds\n */\nexport function isWithinBounds(e: any, rect: ClientRect): boolean {\n  return (\n    e.clientX >= rect.left &&\n    e.clientX <= rect.left + rect.width &&\n    e.clientY >= rect.top &&\n    e.clientY <= rect.top + rect.height\n  );\n}\n","import { Directive, Inject, ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { fromEvent, merge, Observable, Subscriber } from 'rxjs';\nimport { map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { stopPropagation } from './scrollbar/common';\n\n@Directive({\n  selector: '[scrollViewport]'\n})\nexport class ScrollViewport {\n  // Viewport element\n  readonly nativeElement: HTMLElement;\n  // Content wrapper element\n  contentWrapperElement!: HTMLElement;\n\n  // Stream that emits when pointer event when the viewport is hovered and emits false value when isn't hovered\n  hovered!: Observable<boolean>;\n  // Stream that emits when viewport is clicked\n  clicked!: Observable<any>;\n\n  // Get viewport size, clientHeight or clientWidth\n  get clientHeight(): number {\n    return this.nativeElement.clientHeight;\n  }\n\n  get clientWidth(): number {\n    return this.nativeElement.clientWidth;\n  }\n\n  get scrollHeight(): number {\n    return this.nativeElement.scrollHeight;\n  }\n\n  get scrollWidth(): number {\n    return this.nativeElement.scrollWidth;\n  }\n\n  // Get viewport scroll offset, scrollTop or scrollLeft\n  get scrollTop(): number {\n    return this.nativeElement.scrollTop;\n  }\n\n  get scrollLeft(): number {\n    return this.nativeElement.scrollLeft;\n  }\n\n  // Get the available scrollable size\n  get scrollMaxX(): number {\n    return this.scrollWidth - this.clientWidth;\n  }\n\n  get scrollMaxY(): number {\n    return this.scrollHeight - this.clientHeight;\n  }\n\n  get contentHeight(): number {\n    return this.contentWrapperElement.clientHeight;\n  }\n\n  constructor(public viewPort: ElementRef,\n              @Inject(DOCUMENT) private document: any) {\n    this.nativeElement = viewPort.nativeElement;\n  }\n\n  /**\n   * Activate viewport pointer events such as 'hovered' and 'clicked' events\n   */\n  activatePointerEvents(propagate: boolean, destroyed: Observable<void>): void {\n    this.hovered = new Observable((subscriber: Subscriber<boolean>) => {\n      // Stream that emits when pointer is moved over the viewport (used to set the hovered state)\n      const mouseMoveStream = fromEvent(this.nativeElement, 'mousemove', { passive: true });\n      const mouseMove = propagate ? mouseMoveStream : mouseMoveStream.pipe(stopPropagation());\n      // Stream that emits when pointer leaves the viewport (used to remove the hovered state)\n      const mouseLeave = fromEvent(this.nativeElement, 'mouseleave').pipe(map(() => false));\n      merge(mouseMove, mouseLeave).pipe(\n        tap((e: false | any) => subscriber.next(e)),\n        takeUntil(destroyed)\n      ).subscribe();\n    });\n\n    this.clicked = new Observable((subscriber: Subscriber<any>) => {\n      const mouseDown = fromEvent(this.nativeElement, 'mousedown', { passive: true }).pipe(\n        tap((e: any) => subscriber.next(e))\n      );\n      const mouseUp = fromEvent(this.nativeElement, 'mouseup', { passive: true }).pipe(\n        tap(() => subscriber.next(false))\n      );\n      mouseDown.pipe(\n        switchMap(() => mouseUp),\n        takeUntil(destroyed)\n      ).subscribe();\n    });\n  }\n\n  /**\n   * Set this directive as a non-functional wrapper, called when a custom viewport is used\n   */\n  setAsWrapper(): void {\n    // In this case the default viewport and the default content wrapper will act as a mask\n    this.nativeElement.className = 'ng-native-scrollbar-hider ng-scroll-layer';\n    if (this.nativeElement.firstElementChild) {\n      this.nativeElement.firstElementChild.className = 'ng-scroll-layer';\n    }\n  }\n\n  /**\n   * Set this directive as  the viewport, called when no custom viewport is used\n   */\n  setAsViewport(customClassName: string): void {\n    this.nativeElement.className = `ng-native-scrollbar-hider ng-scroll-viewport ${customClassName}`;\n    // Check if the custom viewport has only one child and set it as the content wrapper\n    if (this.nativeElement.firstElementChild) {\n      this.contentWrapperElement = this.nativeElement.firstElementChild as HTMLElement;\n      this.contentWrapperElement.classList.add('ng-scroll-content');\n    }\n  }\n\n  /**\n   * Scroll viewport vertically\n   */\n  scrollYTo(value: number): void {\n    this.nativeElement.scrollTop = value;\n  }\n\n  /**\n   * Scroll viewport horizontally\n   */\n  scrollXTo(value: number): void {\n    this.nativeElement.scrollLeft = value;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport type ScrollbarAppearance = 'standard' | 'compact' | undefined;\nexport type ScrollbarTrack = 'vertical' | 'horizontal' | 'all' | undefined;\nexport type ScrollbarVisibility = 'hover' | 'always' | 'native' | undefined;\nexport type ScrollbarPosition = 'native' | 'invertY' | 'invertX' | 'invertAll' | undefined;\nexport type ScrollbarPointerEventsMethod = 'viewport' | 'scrollbar' | undefined;\n\nexport const NG_SCROLLBAR_OPTIONS = new InjectionToken<NgScrollbarOptions>('NG_SCROLLBAR_OPTIONS');\n\nexport interface NgScrollbarOptions {\n  /**\n   * Sets the scroll axis of the viewport, there are 3 options:\n   *\n   * - `vertical` Use both vertical and horizontal scrollbar-control\n   * - `horizontal` Use both vertical and horizontal scrollbar-control\n   * - `all` Use both vertical and horizontal scrollbar-control\n   */\n  track?: ScrollbarTrack;\n  /**\n   * When to show the scrollbar, and there are 3 options:\n   *\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar-control\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\n   */\n  visibility?: ScrollbarVisibility;\n  /**\n   *  Sets the appearance of the scrollbar, there are 2 options:\n   *\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar-control.\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\n   */\n  appearance?: ScrollbarAppearance;\n  /**\n   * Sets the position of each scrollbar, there are 4 options:\n   *\n   * - `native` (Default) Use the default position like in native scrollbar-control.\n   * - `invertY` Inverts vertical scrollbar position\n   * - `invertX` Inverts Horizontal scrollbar position\n   * - `invertAll` Inverts both scrollbar-control positions\n   */\n  position?: ScrollbarPosition;\n  /**\n   * Sets the pointer events method\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\n   * Use scrollbar pointer events to handle dragging and track click\n   */\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\n  /** A class forwarded to scrollable viewport element */\n  viewClass?: string | undefined;\n  /** A class forwarded to the scrollbar track element */\n  trackClass?: string | undefined;\n  /** A class forwarded to the scrollbar thumb element */\n  thumbClass?: string | undefined;\n  /** The minimum scrollbar thumb size in px */\n  minThumbSize?: number | undefined;\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\n  trackClickScrollDuration?: number | undefined;\n  /** A flag used to enable/disable the scrollbar pointer events */\n  pointerEventsDisabled?: boolean | undefined;\n  /** Debounce interval for detecting changes via window.resize event */\n  windowResizeDebounce?: number | undefined;\n  /** Debounce interval for detecting changes via ResizeObserver */\n  sensorDebounce?: number | undefined;\n  /** Whether ResizeObserver is disabled */\n  sensorDisabled?: boolean | undefined;\n  /** Scroll Audit Time */\n  scrollAuditTime?: number | undefined;\n  /** Enable viewport mousemove event propagation (only when pointerEventsMethod=\"viewport\") */\n  viewportPropagateMouseMove?: boolean | undefined;\n}\n\n/**\n * Set of attributes added on the scrollbar wrapper\n */\nexport interface NgScrollbarState {\n  position?: ScrollbarPosition;\n  track?: ScrollbarTrack;\n  appearance?: ScrollbarAppearance;\n  visibility?: ScrollbarVisibility;\n  deactivated?: boolean;\n  pointerEventsMethod?: ScrollbarPointerEventsMethod;\n  dir?: 'rtl' | 'ltr';\n  verticalUsed?: boolean;\n  horizontalUsed?: boolean;\n  isVerticallyScrollable?: boolean;\n  isHorizontallyScrollable?: boolean;\n  verticalHovered?: boolean;\n  horizontalHovered?: boolean;\n  verticalDragging?: boolean;\n  horizontalDragging?: boolean;\n  // Flag used to prevent text selection on content\n  scrollbarClicked?: boolean;\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { getRtlScrollAxisType, RtlScrollAxisType } from '@angular/cdk/platform';\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from '../ng-scrollbar.model';\n\nconst defaultOptions: NgScrollbarOptions = {\n  viewClass: '',\n  trackClass: '',\n  thumbClass: '',\n  track: 'vertical',\n  appearance: 'compact',\n  visibility: 'native',\n  position: 'native',\n  pointerEventsMethod: 'viewport',\n  trackClickScrollDuration: 300,\n  minThumbSize: 20,\n  windowResizeDebounce: 0,\n  sensorDebounce: 0,\n  scrollAuditTime: 0,\n  viewportPropagateMouseMove: true\n};\n\n@Injectable({ providedIn: 'root' })\nexport class ScrollbarManager {\n  readonly globalOptions: NgScrollbarOptions;\n\n  readonly rtlScrollAxisType: RtlScrollAxisType;\n\n  constructor(@Optional() @Inject(NG_SCROLLBAR_OPTIONS) options: NgScrollbarOptions) {\n    this.globalOptions = options ? { ...defaultOptions, ...options } : defaultOptions;\n\n    this.rtlScrollAxisType = getRtlScrollAxisType();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewChild,\n  ContentChild,\n  OnInit,\n  AfterViewChecked,\n  OnDestroy,\n  NgZone,\n  ElementRef,\n  EventEmitter,\n  ChangeDetectorRef,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { fromEvent, Observable, Subscriber, Subject } from 'rxjs';\nimport { auditTime, filter, map, pairwise, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { ScrollViewport } from './scroll-viewport';\nimport { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from 'ngx-scrollbar/smooth-scroll';\n// Uncomment the following line in development mode\n//import { SmoothScrollElement, SmoothScrollManager, SmoothScrollToOptions } from '../../smooth-scroll/src/public_api';\nimport {\n  ScrollbarAppearance,\n  ScrollbarTrack,\n  ScrollbarPosition,\n  ScrollbarVisibility,\n  NgScrollbarState,\n  ScrollbarPointerEventsMethod\n} from './ng-scrollbar.model';\nimport { ScrollbarManager } from './utils/scrollbar-manager';\n\n@Component({\n  selector: 'ng-scrollbar',\n  exportAs: 'ngScrollbar',\n  templateUrl: 'ng-scrollbar.html',\n  styleUrls: ['ng-scrollbar.scss', 'scrollbar/shared.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: { '[class.ng-scrollbar]': 'true' }\n})\nexport class NgScrollbar implements OnInit, AfterViewChecked, OnDestroy {\n\n  private _disabled: boolean | undefined = false;\n  private _sensorDisabled: boolean | undefined = this.manager.globalOptions.sensorDisabled;\n  private _pointerEventsDisabled: boolean | undefined = this.manager.globalOptions.pointerEventsDisabled;\n  private _viewportPropagateMouseMove: boolean | undefined = this.manager.globalOptions.viewportPropagateMouseMove;\n\n  /** Disable custom scrollbar and switch back to native scrollbar */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n\n  set disabled(disabled: boolean) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n\n  /** Whether ResizeObserver is disabled */\n  @Input()\n  get sensorDisabled(): boolean {\n    return this._sensorDisabled;\n  }\n\n  set sensorDisabled(disabled: boolean) {\n    this._sensorDisabled = coerceBooleanProperty(disabled);\n  }\n\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\n  @Input()\n  get pointerEventsDisabled(): boolean {\n    return this._pointerEventsDisabled;\n  }\n\n  set pointerEventsDisabled(disabled: boolean) {\n    this._pointerEventsDisabled = coerceBooleanProperty(disabled);\n  }\n\n  /** Enable viewport mousemove event propagation (only when pointerEventsMethod=\"viewport\") */\n  @Input()\n  get viewportPropagateMouseMove(): boolean {\n    return this._viewportPropagateMouseMove;\n  }\n  set viewportPropagateMouseMove(disabled: boolean) {\n    this._viewportPropagateMouseMove = coerceBooleanProperty(disabled);\n  }\n\n  /** A class forwarded to scrollable viewport element */\n  @Input() viewClass: string | undefined = this.manager.globalOptions.viewClass;\n  /** A class forwarded to the scrollbar track element */\n  @Input() trackClass: string | undefined = this.manager.globalOptions.trackClass;\n  /** A class forwarded to the scrollbar thumb element */\n  @Input() thumbClass: string | undefined = this.manager.globalOptions.thumbClass;\n  /** Minimum scrollbar thumb size */\n  @Input() minThumbSize: number | undefined = this.manager.globalOptions.minThumbSize;\n  /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\n  @Input() trackClickScrollDuration: number | undefined = this.manager.globalOptions.trackClickScrollDuration;\n  /**\n   * Sets the pointer events method\n   * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\n   * Use scrollbar pointer events to handle dragging and track click\n   */\n  @Input() pointerEventsMethod: ScrollbarPointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;\n  /**\n   * Sets the supported scroll track of the viewport, there are 3 options:\n   *\n   * - `vertical` Use both vertical and horizontal scrollbar\n   * - `horizontal` Use both vertical and horizontal scrollbar\n   * - `all` Use both vertical and horizontal scrollbar\n   */\n  @Input() track: ScrollbarTrack = this.manager.globalOptions.track;\n  /**\n   * When to show the scrollbar, and there are 3 options:\n   *\n   * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\n   * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\n   * - `always` Scrollbars are always shown even if the viewport is not scrollable\n   */\n  @Input() visibility: ScrollbarVisibility = this.manager.globalOptions.visibility;\n  /**\n   *  Sets the appearance of the scrollbar, there are 2 options:\n   *\n   * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\n   * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\n   */\n  @Input() appearance: ScrollbarAppearance = this.manager.globalOptions.appearance;\n  /**\n   * Sets the position of each scrollbar, there are 4 options:\n   *\n   * - `native` (Default) Use the default position like in native scrollbar.\n   * - `invertY` Inverts vertical scrollbar position\n   * - `invertX` Inverts Horizontal scrollbar position\n   * - `invertAll` Inverts both scrollbar positions\n   */\n  @Input() position: ScrollbarPosition = this.manager.globalOptions.position;\n  /** Debounce interval for detecting changes via ResizeObserver */\n  @Input() sensorDebounce: number | undefined = this.manager.globalOptions.sensorDebounce;\n  /** Scroll Audit Time */\n  @Input() scrollAuditTime: number | undefined = this.manager.globalOptions.scrollAuditTime;\n  /** Steam that emits when scrollbar is updated */\n  @Output() updated = new EventEmitter<void>();\n  /** Default viewport reference */\n  @ViewChild(ScrollViewport, { static: true }) private defaultViewPort: ScrollViewport;\n  /** Custom viewport reference */\n  @ContentChild(ScrollViewport, { static: true }) private customViewPort: ScrollViewport;\n  /** Viewport Element */\n  viewport: ScrollViewport;\n  /** Set of attributes added on the scrollbar wrapper */\n  state: NgScrollbarState = {};\n  /** Stream that destroys components' observables */\n  private readonly destroyed = new Subject<void>();\n\n  /** Stream that emits on scroll event */\n  scrolled: Observable<any>;\n  /** Steam that emits scroll event for vertical scrollbar */\n  verticalScrolled: Observable<any>;\n  /** Steam that emits scroll event for horizontal scrollbar */\n  horizontalScrolled: Observable<any>;\n\n  get nativeElement(): HTMLElement {\n    return this.el.nativeElement;\n  }\n\n  constructor(\n    private el: ElementRef,\n    private zone: NgZone,\n    private changeDetectorRef: ChangeDetectorRef,\n    private dir: Directionality,\n    private smoothScroll: SmoothScrollManager,\n    public manager: ScrollbarManager) {\n  }\n\n  /**\n   * Update local state with each change detection\n   */\n  private updateState() {\n    let verticalUsed: boolean = false;\n    let horizontalUsed: boolean = false;\n    let isVerticallyScrollable: boolean = false;\n    let isHorizontallyScrollable: boolean = false;\n\n    // Check if vertical scrollbar should be displayed\n    if (this.track === 'all' || this.track === 'vertical') {\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\n    }\n    // Check if horizontal scrollbar should be displayed\n    if (this.track === 'all' || this.track === 'horizontal') {\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\n    }\n\n    // Update inner wrapper attributes\n    this._updateState({\n      position: this.position,\n      track: this.track,\n      appearance: this.appearance,\n      visibility: this.visibility,\n      deactivated: this.disabled,\n      dir: this.dir.value,\n      pointerEventsMethod: this.pointerEventsMethod,\n      verticalUsed,\n      horizontalUsed,\n      isVerticallyScrollable,\n      isHorizontallyScrollable\n    });\n  }\n\n  private _updateState(state: NgScrollbarState) {\n    this.state = { ...this.state, ...state };\n    this.changeDetectorRef.detectChanges();\n  }\n\n  private getScrolledByDirection(property: 'scrollLeft' | 'scrollTop') {\n    let event: any;\n    return this.scrolled.pipe(\n      tap((e: any) => event = e),\n      pluck('target', property),\n      pairwise(),\n      filter(([prev, curr]) => prev !== curr),\n      map(() => event)\n    );\n  }\n\n  /**\n   * Set hovered state if a scrollbar is being hovered\n   */\n  setHovered(hovered: ScrollbarHovered) {\n    this.zone.run(() => this._updateState({ ...hovered }));\n  }\n\n  /**\n   * Set dragging state if a scrollbar is being dragged\n   */\n  setDragging(dragging: ScrollbarDragging) {\n    this.zone.run(() => this._updateState({ ...dragging }));\n  }\n\n  /**\n   * Set clicked state if a scrollbar track is being click\n   */\n  setClicked(scrollbarClicked: boolean) {\n    this.zone.run(() => this._updateState({ scrollbarClicked }));\n  }\n\n  ngOnInit() {\n    // Set the viewport based on user choice\n    this.zone.runOutsideAngular(() => {\n      if (this.customViewPort) {\n        this.viewport = this.customViewPort;\n        this.defaultViewPort.setAsWrapper();\n      } else {\n        this.viewport = this.defaultViewPort;\n      }\n      // Activate the selected viewport\n      this.viewport.setAsViewport(this.viewClass!);\n\n      let scrollStream = fromEvent(this.viewport.nativeElement, 'scroll', { passive: true });\n      // Throttle scroll event if 'scrollAuditTime' is set\n      scrollStream = this.scrollAuditTime ? scrollStream.pipe(auditTime(this.scrollAuditTime)) : scrollStream;\n      // Initialize scroll streams\n      this.scrolled = new Observable((subscriber: Subscriber<any>) =>\n        scrollStream.pipe(takeUntil(this.destroyed)).subscribe(subscriber)\n      );\n      this.verticalScrolled = this.getScrolledByDirection('scrollTop');\n      this.horizontalScrolled = this.getScrolledByDirection('scrollLeft');\n    });\n  }\n\n  ngAfterViewChecked() {\n    this.updateState();\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  /**\n   * Update local state and the internal scrollbar controls\n   */\n  update() {\n    if (!this.state.horizontalUsed) {\n      // Auto-height: Set component height to content height\n      this.nativeElement.style.height = `${ this.viewport.contentHeight }px`;\n    }\n    this.updated.next();\n    this.changeDetectorRef.detectChanges();\n  }\n\n  /**\n   * Smooth scroll functions\n   */\n  scrollTo(options: SmoothScrollToOptions): Promise<void> {\n    return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\n  }\n\n  /**\n   * Scroll to element by reference or selector\n   */\n  scrollToElement(target: SmoothScrollElement, options?): Promise<void> {\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\n  }\n}\n\ninterface ScrollbarDragging {\n  verticalDragging?: boolean;\n  horizontalDragging?: boolean;\n}\n\ninterface ScrollbarHovered {\n  verticalHovered?: boolean;\n  horizontalHovered?: boolean;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { BehaviorSubject, fromEvent, Observable } from 'rxjs';\nimport { debounceTime, tap, distinctUntilChanged, map } from 'rxjs/operators';\nimport { ScrollbarManager } from './scrollbar-manager';\n\n@Injectable({ providedIn: 'root' })\nexport class NativeScrollbarSizeFactory {\n  private readonly _scrollbarSize = new BehaviorSubject<number>(this.getNativeScrollbarSize());\n  scrollbarSize: Observable<number> = this._scrollbarSize.asObservable();\n\n  constructor(@Inject(DOCUMENT) private document: any,\n              private manager: ScrollbarManager,\n              private platform: Platform) {\n    // Calculate native scrollbar size on window resize event, because the size changes if use zoomed in/out\n    if (platform.isBrowser) {\n      fromEvent(this.document.defaultView, 'resize', { passive: true }).pipe(\n        debounceTime(this.manager.globalOptions.windowResizeDebounce!),\n        map(() => this.getNativeScrollbarSize()),\n        distinctUntilChanged(),\n        tap((size: number) => this._scrollbarSize.next(size))\n      ).subscribe();\n    }\n  }\n\n  /**\n   * Get native scrollbar size\n   */\n  private getNativeScrollbarSize(): number {\n    // Avoid executing browser code in server side rendering\n    if (!this.platform.isBrowser) {\n      return 0;\n    }\n    // Hide iOS browsers native scrollbar\n    if (this.platform.IOS) {\n      return 6;\n    }\n    const box = this.document.createElement('div');\n    box.className = 'ng-scrollbar-measure';\n    this.document.body.appendChild(box);\n    const size = box.getBoundingClientRect().right;\n    this.document.body.removeChild(box);\n    return size;\n  }\n}\n","import { Directive, ElementRef, Renderer2, RendererStyleFlags2, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NativeScrollbarSizeFactory } from './native-scrollbar-size-factory';\n\n@Directive({\n  selector: '[hideNativeScrollbar]'\n})\nexport class HideNativeScrollbar implements OnDestroy {\n\n  private readonly _subscriber = Subscription.EMPTY;\n\n  constructor(el: ElementRef,\n              private renderer: Renderer2,\n              private hideNativeScrollbar: NativeScrollbarSizeFactory) {\n    this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe((size: number) => {\n      this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', `-${ size }px`, RendererStyleFlags2.DashCase);\n    });\n  }\n\n  ngOnDestroy() {\n    this._subscriber.unsubscribe();\n  }\n}\n","import { Directive, ElementRef, Input } from '@angular/core';\nimport { NgScrollbarState } from '../ng-scrollbar.model';\n\n@Directive({ selector: '[ngAttr]' })\nexport class NgAttr {\n\n  constructor(private el: ElementRef) {\n  }\n\n  @Input() set ngAttr(attrs: NgScrollbarState) {\n    for (const [key, value] of Object.entries(attrs)) {\n      (this.el.nativeElement as HTMLElement).setAttribute(key, value);\n    }\n  }\n}\n","import { Directive, Input, Injectable, Inject, AfterContentInit, OnDestroy, NgZone, Output, EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { from, of, EMPTY, BehaviorSubject, Observable, Subscription, Observer } from 'rxjs';\nimport { catchError, debounceTime, map, switchMap } from 'rxjs/operators';\nimport { NgScrollbar } from '../ng-scrollbar';\n\n/**\n * Factory that initialize the ResizeObserver if available in the browser\n * Otherwise, it lazy-loads the ResizeObserver polyfill\n */\n@Injectable({ providedIn: 'root' })\nexport class ResizeObserverFactory {\n  private readonly resizeObserverSource = new BehaviorSubject<any>(null);\n  readonly resizeObserverLoader = this.resizeObserverSource.asObservable();\n\n  constructor(@Inject(DOCUMENT) document: any, platform: Platform) {\n    if (platform.isBrowser) {\n      const resizeObserverApi = document.defaultView.ResizeObserver\n        ? of(document.defaultView.ResizeObserver)\n        : from(import('@juggle/resize-observer')).pipe(\n          map((module: { ResizeObserver: any }) => module.ResizeObserver),\n          catchError((e) => {\n            console.log('Unable to load ResizeObserver polyfill', e);\n            return EMPTY;\n          }));\n      this.resizeObserverSource.next(resizeObserverApi);\n    }\n  }\n}\n\n@Directive({ selector: '[resizeSensor]' })\nexport class ResizeSensor implements AfterContentInit, OnDestroy {\n\n  /** Debounce interval for emitting the changes. */\n  @Input('sensorDebounce')\n  get debounce(): number {\n    return this._debounce;\n  }\n\n  set debounce(value: number) {\n    this._debounce = coerceNumberProperty(value);\n    this._subscribe();\n  }\n\n  private _debounce: number;\n\n  /** Whether ResizeObserver is disabled. */\n  @Input('sensorDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value: any) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this._unsubscribe() : this._subscribe();\n  }\n\n  private _disabled: boolean = false;\n\n  private _subscription: Subscription | null = null;\n  private _resizeObserver: any;\n\n  @Output() resizeSensor = new EventEmitter<void>();\n\n  constructor(private zone: NgZone,\n              private platform: Platform,\n              private resizeObserverFactory: ResizeObserverFactory,\n              private scrollbar: NgScrollbar) {\n    if (!scrollbar) {\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\n    }\n  }\n\n  ngAfterContentInit() {\n    if (!this._subscription && !this._disabled) {\n      this._subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsubscribe();\n  }\n\n  private _createObserver(ResizeObserver: any): Observable<void> {\n    return new Observable((observer: Observer<void>) => {\n      this._resizeObserver = new ResizeObserver(() => observer.next());\n      this._resizeObserver.observe(this.scrollbar.viewport.nativeElement);\n      if (this.scrollbar.viewport.contentWrapperElement) {\n        this._resizeObserver.observe(this.scrollbar.viewport.contentWrapperElement);\n      }\n    });\n  }\n\n  private _subscribe() {\n    this._unsubscribe();\n    if (this.platform.isBrowser) {\n      this.zone.runOutsideAngular(() => {\n        this._subscription = this.resizeObserverFactory.resizeObserverLoader.pipe(\n          switchMap((moduleObservable: Observable<any>) => moduleObservable),\n          switchMap((ResizeObserver: any) => {\n            if (ResizeObserver) {\n              const stream = this._createObserver(ResizeObserver);\n              return this.debounce ? stream.pipe(debounceTime(this._debounce)) : stream;\n            } else {\n              return EMPTY;\n            }\n          })\n        ).subscribe(() => this.resizeSensor.emit());\n      });\n    }\n  }\n\n  private _unsubscribe() {\n    if (this._resizeObserver) {\n      this._resizeObserver.disconnect();\n    }\n    if (this._subscription) {\n      this._subscription.unsubscribe();\n    }\n  }\n}\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { EMPTY, fromEvent, merge, Observable, of } from 'rxjs';\nimport { map, pluck, switchMap, tap } from 'rxjs/operators';\nimport { preventSelection, enableSelection, stopPropagation } from '../common';\nimport { NgScrollbar } from '../../ng-scrollbar';\n\nexport abstract class TrackAdapter {\n\n  // Stream that emits when the track element is clicked\n  get clicked(): Observable<any> {\n    const mouseDown = fromEvent(this.trackElement, 'mousedown', { passive: true }).pipe(\n      stopPropagation(),\n      preventSelection(this.document)\n    );\n    const mouseup = fromEvent(this.document, 'mouseup', { passive: true }).pipe(\n      stopPropagation(),\n      enableSelection(this.document),\n      switchMap(() => EMPTY)\n    );\n    return merge(mouseDown, mouseup);\n  }\n\n  // Stream that emits when the track element is hovered\n  get hovered(): Observable<boolean> {\n    const mouseEnter = fromEvent(this.trackElement, 'mouseenter', { passive: true }).pipe(\n      stopPropagation(),\n      map(() => true)\n    );\n    const mouseLeave = fromEvent(this.trackElement, 'mouseleave', { passive: true }).pipe(\n      stopPropagation(),\n      map(() => false)\n    );\n    return merge(mouseEnter, mouseLeave);\n  }\n\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\n  abstract get pageProperty(): string;\n\n  // Returns the track size, clientHeight or clientWidth\n  abstract get size(): number;\n\n  // Returns the start offset either 'clientRect.top' or 'clientRect.left'\n  abstract get offset(): number;\n\n  // Get track client rect\n  get clientRect(): ClientRect {\n    return this.trackElement.getBoundingClientRect();\n  }\n\n  protected constructor(protected cmp: NgScrollbar,\n                        protected trackElement: HTMLElement,\n                        protected document: any) {\n  }\n\n  /**\n   * Stream that emits when scrollbar track is clicked\n   */\n  onTrackClicked(e: any, thumbSize: number, scrollSize: number): Observable<any> {\n    return of(e).pipe(\n      pluck(this.pageProperty),\n      // Calculate scrollTo position\n      map((pageOffset: number) => {\n        const clickOffset = pageOffset - this.offset;\n        const offset = clickOffset - (thumbSize / 2);\n        const ratio = offset / this.size;\n        return ratio * scrollSize;\n      }),\n      // Smooth scroll to position\n      tap((value: number) => {\n        this.cmp.scrollTo({\n          ...this.mapToScrollToOption(value),\n          duration: coerceNumberProperty(this.cmp.trackClickScrollDuration)\n        });\n      })\n    );\n  }\n\n  protected abstract mapToScrollToOption(value: number): ScrollToOptions;\n}\n","import { Input, Output } from '@angular/core';\nimport { animationFrameScheduler, of, fromEvent, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, mergeMap, pluck, takeUntil, tap } from 'rxjs/operators';\nimport { enableSelection, preventSelection, stopPropagation } from '../common';\nimport { NgScrollbar } from '../../ng-scrollbar';\nimport { TrackAdapter } from '../track/track';\n\nexport abstract class ThumbAdapter {\n\n  @Input() track: TrackAdapter;\n\n  // Stream that emits dragging state\n  private _dragging = new Subject<boolean>();\n  @Output() dragging = this._dragging.pipe(distinctUntilChanged());\n\n  // Returns either 'pageX' or 'pageY' according to scrollbar axis\n  protected abstract get pageProperty(): string;\n\n  // Returns either 'clientHeight' or 'clientWidth' according to scrollbar axis\n  protected abstract get clientProperty(): string;\n\n  abstract get dragStartOffset(): number;\n\n  // Returns thumb size, clientHeight or clientWidth\n  abstract get size(): number;\n\n  protected abstract get viewportScrollSize(): number;\n\n  protected abstract get viewportScrollOffset(): number;\n\n  abstract get viewportScrollMax(): number;\n\n  get trackMax(): number {\n    return this.track.size - this.size;\n  }\n\n  // Get thumb client rect\n  get clientRect(): ClientRect {\n    return this.thumbElement.getBoundingClientRect();\n  }\n\n  // Stream that emits when scrollbar thumb is clicked\n  get clicked(): Observable<any> {\n    return fromEvent(this.thumbElement, 'mousedown', { passive: true }).pipe(stopPropagation());\n  }\n\n  protected constructor(protected cmp: NgScrollbar,\n                        protected thumbElement: HTMLElement,\n                        protected document: any) {\n  }\n\n  // Calculate and update thumb position and size\n  update() {\n    const size = calculateThumbSize(this.track.size, this.viewportScrollSize, this.cmp.minThumbSize!);\n    const position = calculateThumbPosition(this.viewportScrollOffset, this.viewportScrollMax, this.trackMax);\n    animationFrameScheduler.schedule(() => this.updateStyles(this.handleDirection(position, this.trackMax), size));\n  }\n\n  /**\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\n   */\n  dragged(event: any): Observable<number> {\n    let trackMaxStart: number;\n    let scrollMaxStart: number;\n\n    const dragStart = of(event).pipe(\n      preventSelection(this.document),\n      tap(() => {\n        // Capture scrollMax and trackMax once\n        trackMaxStart = this.trackMax;\n        scrollMaxStart = this.viewportScrollMax;\n        this.setDragging(true);\n      }),\n    );\n\n    const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(stopPropagation());\n\n    const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(\n      stopPropagation(),\n      enableSelection(this.document),\n      tap(() => this.setDragging(false))\n    );\n\n    return dragStart.pipe(\n      pluck(this.pageProperty),\n      map((pageOffset: number) => pageOffset - this.dragStartOffset),\n      mergeMap((mouseDownOffset: number) => dragging.pipe(\n        pluck(this.clientProperty),\n        // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\n        map((mouseOffset: number) => mouseOffset - this.track.offset),\n        map((offset: number) => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart),\n        map((position: number) => this.handleDrag(position, scrollMaxStart)),\n        tap((position: number) => this.scrollTo(position)),\n        takeUntil(dragEnd)\n      ))\n    );\n  }\n\n  // Set dragging state\n  protected abstract setDragging(value: boolean): void;\n\n  // Scroll viewport instantly\n  protected abstract scrollTo(position: number): void;\n\n  // Update thumb element size and position\n  protected abstract updateStyles(position: number, size: number): void;\n\n  // Handle dragging position (Support LTR and RTL directions for the horizontal scrollbar)\n  protected abstract handleDrag(position: number, scrollMax?: number): number;\n\n  // Handle scrolling position (Support LTR and RTL directions for the horizontal scrollbar)\n  protected abstract handleDirection(position: number, scrollMax?: number): number;\n}\n\n/**\n * Calculate scrollbar thumb size\n */\nfunction calculateThumbSize(trackSize: number, contentSize: number, minThumbSize: number): number {\n  const scrollbarRatio = trackSize / contentSize;\n  const thumbSize = scrollbarRatio * trackSize;\n  return Math.max(~~thumbSize, minThumbSize);\n}\n\n/**\n * Calculate scrollbar thumb position\n */\nfunction calculateThumbPosition(scrollPosition: number, scrollMax: number, trackMax: number): number {\n  return scrollPosition * trackMax / scrollMax;\n}\n","import { Directive, Inject, ElementRef } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NgScrollbar } from '../../ng-scrollbar';\nimport { ThumbAdapter } from './thumb';\n\n@Directive({ selector: '[scrollbarThumbX]' })\nexport class ThumbXDirective extends ThumbAdapter {\n\n  protected get clientProperty(): string {\n    return 'clientX';\n  }\n\n  protected get pageProperty(): string {\n    return 'pageX';\n  }\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollWidth;\n  }\n\n  protected get viewportScrollOffset(): number {\n    return this.cmp.viewport.scrollLeft;\n  }\n\n  get viewportScrollMax(): number {\n    return this.cmp.viewport.scrollMaxX;\n  }\n\n  get dragStartOffset(): number {\n    return this.clientRect.left;\n  }\n\n  get size(): number {\n    return this.thumbElement.clientWidth;\n  }\n\n  constructor(protected cmp: NgScrollbar,\n              protected element: ElementRef,\n              @Inject(DOCUMENT) protected document: any,\n              protected dir: Directionality) {\n    super(cmp, element.nativeElement, document);\n  }\n\n  protected updateStyles(position: number, size: number) {\n    this.thumbElement.style.width = `${size}px`;\n    this.thumbElement.style.transform = `translate3d(${position}px, 0, 0)`;\n  }\n\n  protected handleDrag(position: number, scrollMax: number): number {\n    if (this.dir.value === 'rtl') {\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n        return position - scrollMax;\n      }\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\n        return scrollMax - position;\n      }\n      // Keeping this as a memo\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\n      //   return position;\n      // }\n    }\n    return position;\n  }\n\n  protected handleDirection(position: number, trackMax: number): number {\n    if (this.dir.value === 'rtl') {\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\n        return -position;\n      }\n      if (this.cmp.manager.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\n        return position - trackMax;\n      }\n      // Keeping this as a memo\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n      //   return position;\n      // }\n    }\n    return position;\n  }\n\n  protected setDragging(value: boolean): void {\n    this.cmp.setDragging({ horizontalDragging: value });\n  }\n\n  protected scrollTo(position: number): void {\n    this.cmp.viewport.scrollXTo(position);\n  }\n}\n\n@Directive({ selector: '[scrollbarThumbY]' })\nexport class ThumbYDirective extends ThumbAdapter {\n\n  protected get pageProperty(): string {\n    return 'pageY';\n  }\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollHeight;\n  }\n\n  protected get viewportScrollOffset(): number {\n    return this.cmp.viewport.scrollTop;\n  }\n\n  get viewportScrollMax(): number {\n    return this.cmp.viewport.scrollMaxY;\n  }\n\n  protected get clientProperty(): string {\n    return 'clientY';\n  }\n\n  get dragStartOffset(): number {\n    return this.clientRect.top;\n  }\n\n  get size(): number {\n    return this.thumbElement.clientHeight;\n  }\n\n  constructor(protected cmp: NgScrollbar,\n              protected element: ElementRef,\n              @Inject(DOCUMENT) protected document: any) {\n    super(cmp, element.nativeElement, document);\n  }\n\n\n  protected updateStyles(position: number, size: number): void {\n    this.thumbElement.style.height = `${size}px`;\n    this.thumbElement.style.transform = `translate3d(0px, ${position}px, 0)`;\n  }\n\n  protected handleDrag(position: number): number {\n    return position;\n  }\n\n  protected handleDirection(position: number): number {\n    return position;\n  }\n\n  protected setDragging(value: boolean): void {\n    this.cmp.setDragging({ verticalDragging: value });\n  }\n\n  protected scrollTo(position: number): void {\n    this.cmp.viewport.scrollYTo(position);\n  }\n}\n","import { Directive, ElementRef, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { TrackAdapter } from './track';\nimport { NgScrollbar } from '../../ng-scrollbar';\n\n@Directive({ selector: '[scrollbarTrackX]' })\nexport class TrackXDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageX';\n  }\n\n  get offset(): number {\n    return this.clientRect.left;\n  }\n\n  get size(): number {\n    return this.trackElement.clientWidth;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { left: value };\n  }\n}\n\n@Directive({ selector: '[scrollbarTrackY]' })\nexport class TrackYDirective extends TrackAdapter {\n\n  get pageProperty(): string {\n    return 'pageY';\n  }\n\n  get offset(): number {\n    return this.clientRect.top;\n  }\n\n  get size(): number {\n    return this.trackElement.clientHeight;\n  }\n\n  constructor(protected cmp: NgScrollbar, trackElement: ElementRef, @Inject(DOCUMENT) protected document: any) {\n    super(cmp, trackElement.nativeElement, document);\n  }\n\n  protected mapToScrollToOption(value: number): ScrollToOptions {\n    return { top: value };\n  }\n}\n","import { OnDestroy, OnInit, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { asyncScheduler, EMPTY, merge, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { NgScrollbar } from '../ng-scrollbar';\nimport { ThumbAdapter } from './thumb/thumb';\nimport { TrackAdapter } from './track/track';\nimport { isWithinBounds } from './common';\n\nexport abstract class Scrollbar implements OnInit, OnDestroy {\n\n  // Thumb directive reference\n  readonly thumb: ThumbAdapter;\n  // Track directive reference\n  readonly track: TrackAdapter;\n  // Stream that emits to unsubscribe from all streams\n  protected readonly destroyed = new Subject<void>();\n\n  /**\n   * Viewport pointer events\n   * The following streams are only activated when (pointerEventsMethod === 'viewport')\n   */\n  protected viewportTrackClicked!: Subject<any>;\n  protected viewportThumbClicked!: Subject<any>;\n\n  protected abstract get viewportScrollSize(): number;\n\n  protected constructor(public cmp: NgScrollbar, protected platform: Platform, protected document: any, protected zone: NgZone) {\n  }\n\n  /**\n   * Activate scrollbar pointer events\n   */\n  private activatePointerEvents(): Observable<any> {\n    // Stream that emits when scrollbar thumb is dragged\n    let thumbDragEvent: Observable<any> = EMPTY;\n    // Stream that emits when scrollbar track is clicked\n    let trackClickEvent: Observable<any> = EMPTY;\n    // Stream that emits when scrollbar track is hovered\n    let trackHoveredEvent: Observable<any> = EMPTY;\n\n    // Set the method used for the pointer events option\n    if (this.cmp.pointerEventsMethod === 'viewport') {\n      // Pointer events using the viewport\n      this.viewportTrackClicked = new Subject<any>();\n      this.viewportThumbClicked = new Subject<any>();\n\n      // Activate the pointer events of the viewport directive\n      this.cmp.viewport.activatePointerEvents(this.cmp.viewportPropagateMouseMove, this.destroyed);\n\n      // Set streams\n      thumbDragEvent = this.viewportThumbClicked;\n      trackClickEvent = this.viewportTrackClicked;\n      trackHoveredEvent = this.cmp.viewport.hovered.pipe(\n        // Check if track is hovered\n        map((e: any) => isWithinBounds(e, this.track.clientRect)),\n        distinctUntilChanged(),\n        // Enable / disable text selection\n        tap((hovered: boolean) => this.document.onselectstart = hovered ? () => false : null)\n      );\n\n      this.cmp.viewport.clicked.pipe(\n        tap((e: any) => {\n          if (e) {\n            if (isWithinBounds(e, this.thumb.clientRect)) {\n              this.viewportThumbClicked.next(e);\n            } else if (isWithinBounds(e, this.track.clientRect)) {\n              this.cmp.setClicked(true);\n              this.viewportTrackClicked.next(e);\n            }\n          } else {\n            this.cmp.setClicked(false);\n          }\n        }),\n        takeUntil(this.destroyed)\n      ).subscribe();\n    } else {\n      // Pointer events method is using 'scrollbar'\n      thumbDragEvent = this.thumb.clicked;\n      trackClickEvent = this.track.clicked;\n      trackHoveredEvent = this.track.hovered;\n    }\n\n    return merge(\n      // Activate scrollbar hovered event\n      trackHoveredEvent.pipe(tap((e: boolean) => this.setHovered(e))),\n      // Activate scrollbar thumb drag event\n      thumbDragEvent.pipe(switchMap((e: any) => this.thumb.dragged(e))),\n      // Activate scrollbar track click event\n      trackClickEvent.pipe(switchMap((e: any) => this.track.onTrackClicked(e, this.thumb.size, this.viewportScrollSize)))\n    );\n  }\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      // Activate pointer events on Desktop only\n      if (!(this.platform.IOS || this.platform.ANDROID) && !this.cmp.pointerEventsDisabled) {\n        this.activatePointerEvents().pipe(takeUntil(this.destroyed)).subscribe();\n      }\n\n      // Stream that emits when host component is updated\n      const updated = this.cmp.updated.pipe(tap(() => this.onUpdated()));\n\n      // Update scrollbar thumb when viewport is scrolled and when scrollbar component is updated\n      merge(this.cmp.scrolled, updated).pipe(\n        tap(() => this.thumb.update()),\n        takeUntil(this.destroyed)\n      ).subscribe();\n\n      // Initialize scrollbar\n      asyncScheduler.schedule(() => this.thumb.update(), 100);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n\n    // Clean up viewport streams if used\n    if (this.viewportThumbClicked && this.viewportTrackClicked) {\n      this.viewportTrackClicked.complete();\n      this.viewportThumbClicked.complete();\n    }\n  }\n\n  protected abstract setHovered(value: boolean): void;\n\n  protected abstract onUpdated(): void;\n}\n","import { Component, Inject, NgZone, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Platform } from '@angular/cdk/platform';\nimport { TrackXDirective, TrackYDirective } from './track/track.directive';\nimport { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';\nimport { NgScrollbar } from '../ng-scrollbar';\nimport { Scrollbar } from './scrollbar';\n\n@Component({\n  selector: 'scrollbar-y',\n  host: { '[class.scrollbar-control]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./vertical.scss'],\n  template: `\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\n      <div scrollbarThumbY [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\n    </div>\n  `\n})\nexport class ScrollbarY extends Scrollbar {\n\n  @ViewChild(TrackYDirective, { static: true }) readonly track: TrackYDirective;\n  @ViewChild(ThumbYDirective, { static: true }) readonly thumb: ThumbYDirective;\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollHeight;\n  }\n\n  constructor(public cmp: NgScrollbar, protected platform: Platform, @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\n    super(cmp, platform, document, zone);\n  }\n\n  protected setHovered(value: boolean): void {\n    this.cmp.setHovered({ verticalHovered: value });\n  }\n\n  onUpdated(): void {\n  }\n}\n\n@Component({\n  selector: 'scrollbar-x',\n  host: { '[class.scrollbar-control]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./horizontal.scss'],\n  template: `\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\n      <div scrollbarThumbX [track]=\"track\" class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\n    </div>\n  `\n})\nexport class ScrollbarX extends Scrollbar {\n\n  @ViewChild(TrackXDirective, { static: true }) readonly track: TrackXDirective;\n  @ViewChild(ThumbXDirective, { static: true }) readonly thumb: ThumbXDirective;\n\n  protected get viewportScrollSize(): number {\n    return this.cmp.viewport.scrollWidth;\n  }\n\n  get thickness(): number {\n    return this.el.nativeElement.clientHeight;\n  }\n\n  constructor(private el: ElementRef,\n              public cmp: NgScrollbar,\n              protected platform: Platform,\n              @Inject(DOCUMENT) protected document: any, protected zone: NgZone) {\n    super(cmp, platform, document, zone);\n  }\n\n  protected setHovered(value: boolean): void {\n    this.cmp.setHovered({ horizontalHovered: value });\n  }\n\n  onUpdated(): void {\n    // Auto-height: Set root component height to content height\n    this.cmp.nativeElement.style.height = this.cmp.appearance === 'standard'\n      ? `${this.cmp.viewport.contentHeight + this.thickness}px`\n      : `${this.cmp.viewport.contentHeight}px`;\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { PlatformModule } from '@angular/cdk/platform';\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\n// Uncomment the following line in development mode\n// import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';\n\nimport { NgScrollbar } from './ng-scrollbar';\nimport { HideNativeScrollbar } from './utils/hide-native-scrollbar';\nimport { NgAttr } from './utils/ng-attr.directive';\nimport { ResizeSensor } from './utils/resize-sensor.directive';\nimport { ThumbYDirective, ThumbXDirective } from './scrollbar/thumb/thumb.directive';\nimport { TrackXDirective, TrackYDirective } from './scrollbar/track/track.directive';\nimport { ScrollbarX, ScrollbarY } from './scrollbar/scrollbar.component';\nimport { ScrollViewport } from './scroll-viewport';\nimport { NG_SCROLLBAR_OPTIONS, NgScrollbarOptions } from './ng-scrollbar.model';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BidiModule,\n    PortalModule,\n    PlatformModule,\n    SmoothScrollModule\n  ],\n  declarations: [\n    NgScrollbar,\n    ScrollViewport,\n    HideNativeScrollbar,\n    NgAttr,\n    ResizeSensor,\n    ThumbYDirective,\n    ThumbXDirective,\n    TrackXDirective,\n    TrackYDirective,\n    ScrollbarY,\n    ScrollbarX\n  ],\n  exports: [\n    NgScrollbar,\n    ScrollViewport\n  ]\n})\nexport class NgScrollbarModule {\n  static withConfig(options: NgScrollbarOptions): ModuleWithProviders<NgScrollbarModule> {\n    return {\n      ngModule: NgScrollbarModule,\n      providers: [\n        { provide: NG_SCROLLBAR_OPTIONS, useValue: options }\n      ]\n    };\n  }\n}\n"]}
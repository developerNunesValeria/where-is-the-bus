import { __decorate, __metadata, __param } from "tslib";
import { Directive, ElementRef, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { TrackAdapter } from './track';
import { NgScrollbar } from '../../ng-scrollbar';
let TrackXDirective = class TrackXDirective extends TrackAdapter {
    constructor(cmp, trackElement, document) {
        super(cmp, trackElement.nativeElement, document);
        this.cmp = cmp;
        this.document = document;
    }
    get pageProperty() {
        return 'pageX';
    }
    get offset() {
        return this.clientRect.left;
    }
    get size() {
        return this.trackElement.clientWidth;
    }
    mapToScrollToOption(value) {
        return { left: value };
    }
};
TrackXDirective.ctorParameters = () => [
    { type: NgScrollbar },
    { type: ElementRef },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
TrackXDirective = __decorate([
    Directive({ selector: '[scrollbarTrackX]' }),
    __param(2, Inject(DOCUMENT)),
    __metadata("design:paramtypes", [NgScrollbar, ElementRef, Object])
], TrackXDirective);
export { TrackXDirective };
let TrackYDirective = class TrackYDirective extends TrackAdapter {
    constructor(cmp, trackElement, document) {
        super(cmp, trackElement.nativeElement, document);
        this.cmp = cmp;
        this.document = document;
    }
    get pageProperty() {
        return 'pageY';
    }
    get offset() {
        return this.clientRect.top;
    }
    get size() {
        return this.trackElement.clientHeight;
    }
    mapToScrollToOption(value) {
        return { top: value };
    }
};
TrackYDirective.ctorParameters = () => [
    { type: NgScrollbar },
    { type: ElementRef },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
TrackYDirective = __decorate([
    Directive({ selector: '[scrollbarTrackY]' }),
    __param(2, Inject(DOCUMENT)),
    __metadata("design:paramtypes", [NgScrollbar, ElementRef, Object])
], TrackYDirective);
export { TrackYDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LXNjcm9sbGJhci8iLCJzb3VyY2VzIjpbImxpYi9zY3JvbGxiYXIvdHJhY2svdHJhY2suZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDdkMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBR2pELElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWdCLFNBQVEsWUFBWTtJQWMvQyxZQUFzQixHQUFnQixFQUFFLFlBQXdCLEVBQThCLFFBQWE7UUFDekcsS0FBSyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRDdCLFFBQUcsR0FBSCxHQUFHLENBQWE7UUFBd0QsYUFBUSxHQUFSLFFBQVEsQ0FBSztJQUUzRyxDQUFDO0lBZEQsSUFBSSxZQUFZO1FBQ2QsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7SUFDOUIsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUM7SUFDdkMsQ0FBQztJQU1TLG1CQUFtQixDQUFDLEtBQWE7UUFDekMsT0FBTyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsQ0FBQztJQUN6QixDQUFDO0NBQ0YsQ0FBQTs7WUFQNEIsV0FBVztZQUFnQixVQUFVOzRDQUFHLE1BQU0sU0FBQyxRQUFROztBQWR2RSxlQUFlO0lBRDNCLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxtQkFBbUIsRUFBRSxDQUFDO0lBZXdCLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO3FDQUF4RCxXQUFXLEVBQWdCLFVBQVU7R0FkckQsZUFBZSxDQXFCM0I7U0FyQlksZUFBZTtBQXdCNUIsSUFBYSxlQUFlLEdBQTVCLE1BQWEsZUFBZ0IsU0FBUSxZQUFZO0lBYy9DLFlBQXNCLEdBQWdCLEVBQUUsWUFBd0IsRUFBOEIsUUFBYTtRQUN6RyxLQUFLLENBQUMsR0FBRyxFQUFFLFlBQVksQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFEN0IsUUFBRyxHQUFILEdBQUcsQ0FBYTtRQUF3RCxhQUFRLEdBQVIsUUFBUSxDQUFLO0lBRTNHLENBQUM7SUFkRCxJQUFJLFlBQVk7UUFDZCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQztJQUM3QixDQUFDO0lBRUQsSUFBSSxJQUFJO1FBQ04sT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLFlBQVksQ0FBQztJQUN4QyxDQUFDO0lBTVMsbUJBQW1CLENBQUMsS0FBYTtRQUN6QyxPQUFPLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxDQUFDO0lBQ3hCLENBQUM7Q0FDRixDQUFBOztZQVA0QixXQUFXO1lBQWdCLFVBQVU7NENBQUcsTUFBTSxTQUFDLFFBQVE7O0FBZHZFLGVBQWU7SUFEM0IsU0FBUyxDQUFDLEVBQUUsUUFBUSxFQUFFLG1CQUFtQixFQUFFLENBQUM7SUFld0IsV0FBQSxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7cUNBQXhELFdBQVcsRUFBZ0IsVUFBVTtHQWRyRCxlQUFlLENBcUIzQjtTQXJCWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IFRyYWNrQWRhcHRlciB9IGZyb20gJy4vdHJhY2snO1xuaW1wb3J0IHsgTmdTY3JvbGxiYXIgfSBmcm9tICcuLi8uLi9uZy1zY3JvbGxiYXInO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbc2Nyb2xsYmFyVHJhY2tYXScgfSlcbmV4cG9ydCBjbGFzcyBUcmFja1hEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xuXG4gIGdldCBwYWdlUHJvcGVydHkoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ3BhZ2VYJztcbiAgfVxuXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnRSZWN0LmxlZnQ7XG4gIH1cblxuICBnZXQgc2l6ZSgpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLnRyYWNrRWxlbWVudC5jbGllbnRXaWR0aDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjbXA6IE5nU2Nyb2xsYmFyLCB0cmFja0VsZW1lbnQ6IEVsZW1lbnRSZWYsIEBJbmplY3QoRE9DVU1FTlQpIHByb3RlY3RlZCBkb2N1bWVudDogYW55KSB7XG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xuICB9XG5cbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XG4gICAgcmV0dXJuIHsgbGVmdDogdmFsdWUgfTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbc2Nyb2xsYmFyVHJhY2tZXScgfSlcbmV4cG9ydCBjbGFzcyBUcmFja1lEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xuXG4gIGdldCBwYWdlUHJvcGVydHkoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJ3BhZ2VZJztcbiAgfVxuXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnRSZWN0LnRvcDtcbiAgfVxuXG4gIGdldCBzaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMudHJhY2tFbGVtZW50LmNsaWVudEhlaWdodDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjbXA6IE5nU2Nyb2xsYmFyLCB0cmFja0VsZW1lbnQ6IEVsZW1lbnRSZWYsIEBJbmplY3QoRE9DVU1FTlQpIHByb3RlY3RlZCBkb2N1bWVudDogYW55KSB7XG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xuICB9XG5cbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XG4gICAgcmV0dXJuIHsgdG9wOiB2YWx1ZSB9O1xuICB9XG59XG4iXX0=
import { __decorate, __metadata, __param } from "tslib";
import { Component, Inject, NgZone, ChangeDetectionStrategy, ElementRef, ViewChild } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { Platform } from '@angular/cdk/platform';
import { TrackXDirective, TrackYDirective } from './track/track.directive';
import { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';
import { NgScrollbar } from '../ng-scrollbar';
import { Scrollbar } from './scrollbar';
let ScrollbarY = class ScrollbarY extends Scrollbar {
    constructor(cmp, platform, document, zone) {
        super(cmp, platform, document, zone);
        this.cmp = cmp;
        this.platform = platform;
        this.document = document;
        this.zone = zone;
    }
    get viewportScrollSize() {
        return this.cmp.viewport.scrollHeight;
    }
    setHovered(value) {
        this.cmp.setHovered({ verticalHovered: value });
    }
    onUpdated() {
    }
};
ScrollbarY.ctorParameters = () => [
    { type: NgScrollbar },
    { type: Platform },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: NgZone }
];
__decorate([
    ViewChild(TrackYDirective, { static: true }),
    __metadata("design:type", TrackYDirective)
], ScrollbarY.prototype, "track", void 0);
__decorate([
    ViewChild(ThumbYDirective, { static: true }),
    __metadata("design:type", ThumbYDirective)
], ScrollbarY.prototype, "thumb", void 0);
ScrollbarY = __decorate([
    Component({
        selector: 'scrollbar-y',
        host: { '[class.scrollbar-control]': 'true' },
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: `
    <div scrollbarTrackY class="ng-scrollbar-track {{cmp.trackClass}}">
      <div scrollbarThumbY [track]="track" class="ng-scrollbar-thumb {{cmp.thumbClass}}"></div>
    </div>
  `,
        styles: ["::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control{width:var(--vertical-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track{width:var(--vertical-scrollbar-size);height:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{height:0;width:100%}::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[verticalHovered=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-y.scrollbar-control{top:0;bottom:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr]>scrollbar-y.scrollbar-control{right:0;left:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertAll]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertY]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertAll]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertY]>scrollbar-y.scrollbar-control{left:unset;right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all]>scrollbar-y.scrollbar-control[fit=true]{bottom:var(--scrollbar-total-size);top:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertAll]>scrollbar-y.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertX]>scrollbar-y.scrollbar-control[fit=true]{top:var(--scrollbar-total-size);bottom:0}"]
    }),
    __param(2, Inject(DOCUMENT)),
    __metadata("design:paramtypes", [NgScrollbar, Platform, Object, NgZone])
], ScrollbarY);
export { ScrollbarY };
let ScrollbarX = class ScrollbarX extends Scrollbar {
    constructor(el, cmp, platform, document, zone) {
        super(cmp, platform, document, zone);
        this.el = el;
        this.cmp = cmp;
        this.platform = platform;
        this.document = document;
        this.zone = zone;
    }
    get viewportScrollSize() {
        return this.cmp.viewport.scrollWidth;
    }
    get thickness() {
        return this.el.nativeElement.clientHeight;
    }
    setHovered(value) {
        this.cmp.setHovered({ horizontalHovered: value });
    }
    onUpdated() {
        // Auto-height: Set root component height to content height
        this.cmp.nativeElement.style.height = this.cmp.appearance === 'standard'
            ? `${this.cmp.viewport.contentHeight + this.thickness}px`
            : `${this.cmp.viewport.contentHeight}px`;
    }
};
ScrollbarX.ctorParameters = () => [
    { type: ElementRef },
    { type: NgScrollbar },
    { type: Platform },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },
    { type: NgZone }
];
__decorate([
    ViewChild(TrackXDirective, { static: true }),
    __metadata("design:type", TrackXDirective)
], ScrollbarX.prototype, "track", void 0);
__decorate([
    ViewChild(ThumbXDirective, { static: true }),
    __metadata("design:type", ThumbXDirective)
], ScrollbarX.prototype, "thumb", void 0);
ScrollbarX = __decorate([
    Component({
        selector: 'scrollbar-x',
        host: { '[class.scrollbar-control]': 'true' },
        changeDetection: ChangeDetectionStrategy.OnPush,
        template: `
    <div scrollbarTrackX class="ng-scrollbar-track {{cmp.trackClass}}">
      <div scrollbarThumbX [track]="track" class="ng-scrollbar-thumb {{cmp.thumbClass}}"></div>
    </div>
  `,
        styles: ["::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control{height:var(--horizontal-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track{height:var(--horizontal-scrollbar-size);width:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{width:0;height:100%}::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[horizontalHovered=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[position=invertAll]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[position=invertX]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-x.scrollbar-control{left:0;right:0;bottom:0;top:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertAll]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertX]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertAll]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertY]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertAll]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertY]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}"]
    }),
    __param(3, Inject(DOCUMENT)),
    __metadata("design:paramtypes", [ElementRef,
        NgScrollbar,
        Platform, Object, NgZone])
], ScrollbarX);
export { ScrollbarX };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zY3JvbGxiYXIvIiwic291cmNlcyI6WyJsaWIvc2Nyb2xsYmFyL3Njcm9sbGJhci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE1BQU0sRUFBRSx1QkFBdUIsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFHLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMzQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDakQsT0FBTyxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLGVBQWUsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzNFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBYXhDLElBQWEsVUFBVSxHQUF2QixNQUFhLFVBQVcsU0FBUSxTQUFTO0lBU3ZDLFlBQW1CLEdBQWdCLEVBQVksUUFBa0IsRUFBOEIsUUFBYSxFQUFZLElBQVk7UUFDbEksS0FBSyxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1FBRHBCLFFBQUcsR0FBSCxHQUFHLENBQWE7UUFBWSxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQThCLGFBQVEsR0FBUixRQUFRLENBQUs7UUFBWSxTQUFJLEdBQUosSUFBSSxDQUFRO0lBRXBJLENBQUM7SUFORCxJQUFjLGtCQUFrQjtRQUM5QixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQztJQUN4QyxDQUFDO0lBTVMsVUFBVSxDQUFDLEtBQWM7UUFDakMsSUFBSSxD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aUJhLFdBQUEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFBO3FDQUhMLFVBQVU7UUFDVixXQUFXO1FBQ0gsUUFBUSxVQUMrQixNQUFNO0dBaEJsRSxVQUFVLENBOEJ0QjtTQTlCWSxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3QsIE5nWm9uZSwgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIEVsZW1lbnRSZWYsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRE9DVU1FTlQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgVHJhY2tYRGlyZWN0aXZlLCBUcmFja1lEaXJlY3RpdmUgfSBmcm9tICcuL3RyYWNrL3RyYWNrLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBUaHVtYlhEaXJlY3RpdmUsIFRodW1iWURpcmVjdGl2ZSB9IGZyb20gJy4vdGh1bWIvdGh1bWIuZGlyZWN0aXZlJztcbmltcG9ydCB7IE5nU2Nyb2xsYmFyIH0gZnJvbSAnLi4vbmctc2Nyb2xsYmFyJztcbmltcG9ydCB7IFNjcm9sbGJhciB9IGZyb20gJy4vc2Nyb2xsYmFyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnc2Nyb2xsYmFyLXknLFxuICBob3N0OiB7ICdbY2xhc3Muc2Nyb2xsYmFyLWNvbnRyb2xdJzogJ3RydWUnIH0sXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBzdHlsZVVybHM6IFsnLi92ZXJ0aWNhbC5zY3NzJ10sXG4gIHRlbXBsYXRlOiBgXG4gICAgPGRpdiBzY3JvbGxiYXJUcmFja1kgY2xhc3M9XCJuZy1zY3JvbGxiYXItdHJhY2sge3tjbXAudHJhY2tDbGFzc319XCI+XG4gICAgICA8ZGl2IHNjcm9sbGJhclRodW1iWSBbdHJhY2tdPVwidHJhY2tcIiBjbGFzcz1cIm5nLXNjcm9sbGJhci10aHVtYiB7e2NtcC50aHVtYkNsYXNzfX1cIj48L2Rpdj5cbiAgICA8L2Rpdj5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBTY3JvbGxiYXJZIGV4dGVuZHMgU2Nyb2xsYmFyIHtcblxuICBAVmlld0NoaWxkKFRyYWNrWURpcmVjdGl2ZSwgeyBzdGF0aWM6IHRydWUgfSkgcmVhZG9ubHkgdHJhY2s6IFRyYWNrWURpcmVjdGl2ZTtcbiAgQFZpZXdDaGlsZChUaHVtYllEaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pIHJlYWRvbmx5IHRodW1iOiBUaHVtYllEaXJlY3RpdmU7XG5cbiAgcHJvdGVjdGVkIGdldCB2aWV3cG9ydFNjcm9sbFNpemUoKTogbnVtYmVyIHtcbiAgICByZXR1cm4gdGhpcy5jbXAudmlld3BvcnQuc2Nyb2xsSGVpZ2h0O1xuICB9XG5cbiAgY29uc3RydWN0b3IocHVibGljIGNtcDogTmdTY3JvbGxiYXIsIHByb3RlY3RlZCBwbGF0Zm9ybTogUGxhdGZvcm0sIEBJbmplY3QoRE9DVU1FTlQpIHByb3RlY3RlZCBkb2N1bWVudDogYW55LCBwcm90ZWN0ZWQgem9uZTogTmdab25lKSB7XG4gICAgc3VwZXIoY21wLCBwbGF0Zm9ybSwgZG9jdW1lbnQsIHpvbmUpO1xuICB9XG5cbiAgcHJvdGVjdGVkIHNldEhvdmVyZWQodmFsdWU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmNtcC5zZXRIb3ZlcmVkKHsgdmVydGljYWxIb3ZlcmVkOiB2YWx1ZSB9KTtcbiAgfVxuXG4gIG9uVXBkYXRlZCgpOiB2b2lkIHtcbiAgfVxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdzY3JvbGxiYXIteCcsXG4gIGhvc3Q6IHsgJ1tjbGFzcy5zY3JvbGxiYXItY29udHJvbF0nOiAndHJ1ZScgfSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG4gIHN0eWxlVXJsczogWycuL2hvcml6b250YWwuc2NzcyddLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxkaXYgc2Nyb2xsYmFyVHJhY2tYIGNsYXNzPVwibmctc2Nyb2xsYmFyLXRyYWNrIHt7Y21wLnRyYWNrQ2xhc3N9fVwiPlxuICAgICAgPGRpdiBzY3JvbGxiYXJUaHVtYlggW3RyYWNrXT1cInRyYWNrXCIgY2xhc3M9XCJuZy1zY3JvbGxiYXItdGh1bWIge3tjbXAudGh1bWJDbGFzc319XCI+PC9kaXY+XG4gICAgPC9kaXY+XG4gIGBcbn0pXG5leHBvcnQgY2xhc3MgU2Nyb2xsYmFyWCBleHRlbmRzIFNjcm9sbGJhciB7XG5cbiAgQFZpZXdDaGlsZChUcmFja1hEaXJlY3RpdmUsIHsgc3RhdGljOiB0cnVlIH0pIHJlYWRvbmx5IHRyYWNrOiBUcmFja1hEaXJlY3RpdmU7XG4gIEBWaWV3Q2hpbGQoVGh1bWJYRGlyZWN0aXZlLCB7IHN0YXRpYzogdHJ1ZSB9KSByZWFkb25seSB0aHVtYjogVGh1bWJYRGlyZWN0aXZlO1xuXG4gIHByb3RlY3RlZCBnZXQgdmlld3BvcnRTY3JvbGxTaXplKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuY21wLnZpZXdwb3J0LnNjcm9sbFdpZHRoO1xuICB9XG5cbiAgZ2V0IHRoaWNrbmVzcygpOiBudW1iZXIge1xuICAgIHJldHVybiB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQuY2xpZW50SGVpZ2h0O1xuICB9XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZixcbiAgICAgICAgICAgICAgcHVibGljIGNtcDogTmdTY3JvbGxiYXIsXG4gICAgICAgICAgICAgIHByb3RlY3RlZCBwbGF0Zm9ybTogUGxhdGZvcm0sXG4gICAgICAgICAgICAgIEBJbmplY3QoRE9DVU1FTlQpIHByb3RlY3RlZCBkb2N1bWVudDogYW55LCBwcm90ZWN0ZWQgem9uZTogTmdab25lKSB7XG4gICAgc3VwZXIoY21wLCBwbGF0Zm9ybSwgZG9jdW1lbnQsIHpvbmUpO1xuICB9XG5cbiAgcHJvdGVjdGVkIHNldEhvdmVyZWQodmFsdWU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmNtcC5zZXRIb3ZlcmVkKHsgaG9yaXpvbnRhbEhvdmVyZWQ6IHZhbHVlIH0pO1xuICB9XG5cbiAgb25VcGRhdGVkKCk6IHZvaWQge1xuICAgIC8vIEF1dG8taGVpZ2h0OiBTZXQgcm9vdCBjb21wb25lbnQgaGVpZ2h0IHRvIGNvbnRlbnQgaGVpZ2h0XG4gICAgdGhpcy5jbXAubmF0aXZlRWxlbWVudC5zdHlsZS5oZWlnaHQgPSB0aGlzLmNtcC5hcHBlYXJhbmNlID09PSAnc3RhbmRhcmQnXG4gICAgICA/IGAke3RoaXMuY21wLnZpZXdwb3J0LmNvbnRlbnRIZWlnaHQgKyB0aGlzLnRoaWNrbmVzc31weGBcbiAgICAgIDogYCR7dGhpcy5jbXAudmlld3BvcnQuY29udGVudEhlaWdodH1weGA7XG4gIH1cbn1cbiJdfQ==
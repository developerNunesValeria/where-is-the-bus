var NgScrollbarModule_1;
import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { BidiModule } from '@angular/cdk/bidi';
import { PortalModule } from '@angular/cdk/portal';
import { PlatformModule } from '@angular/cdk/platform';
import { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';
// Uncomment the following line in development mode
// import { SmoothScrollModule } from '../../smooth-scroll/src/public_api';
import { NgScrollbar } from './ng-scrollbar';
import { HideNativeScrollbar } from './utils/hide-native-scrollbar';
import { NgAttr } from './utils/ng-attr.directive';
import { ResizeSensor } from './utils/resize-sensor.directive';
import { ThumbYDirective, ThumbXDirective } from './scrollbar/thumb/thumb.directive';
import { TrackXDirective, TrackYDirective } from './scrollbar/track/track.directive';
import { ScrollbarX, ScrollbarY } from './scrollbar/scrollbar.component';
import { ScrollViewport } from './scroll-viewport';
import { NG_SCROLLBAR_OPTIONS } from './ng-scrollbar.model';
let NgScrollbarModule = NgScrollbarModule_1 = class NgScrollbarModule {
    static withConfig(options) {
        return {
            ngModule: NgScrollbarModule_1,
            providers: [
                { provide: NG_SCROLLBAR_OPTIONS, useValue: options }
            ]
        };
    }
};
NgScrollbarModule = NgScrollbarModule_1 = __decorate([
    NgModule({
        imports: [
            CommonModule,
            BidiModule,
            PortalModule,
            PlatformModule,
            SmoothScrollModule
        ],
        declarations: [
            NgScrollbar,
            ScrollViewport,
            HideNativeScrollbar,
            NgAttr,
            ResizeSensor,
            ThumbYDirective,
            ThumbXDirective,
            TrackXDirective,
            TrackYDirective,
            ScrollbarY,
            ScrollbarX
        ],
        exports: [
            NgScrollbar,
            ScrollViewport
        ]
    })
], NgScrollbarModule);
export { NgScrollbarModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2Nyb2xsYmFyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1zY3JvbGxiYXIvIiwic291cmNlcyI6WyJsaWIvbmctc2Nyb2xsYmFyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXVCLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNqRSxtREFBbUQ7QUFDbkQsMkVBQTJFO0FBRTNFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNwRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQy9ELE9BQU8sRUFBRSxlQUFlLEVBQUUsZUFBZSxFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDckYsT0FBTyxFQUFFLGVBQWUsRUFBRSxlQUFlLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNyRixPQUFPLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsb0JBQW9CLEVBQXNCLE1BQU0sc0JBQXNCLENBQUM7QUE0QmhGLElBQWEsaUJBQWlCLHlCQUE5QixNQUFhLGlCQUFpQjtJQUM1QixNQUFNLENBQUMsVUFBVSxDQUFDLE9BQTJCO1FBQzNDLE9BQU87WUFDTCxRQUFRLEVBQUUsbUJBQWlCO1lBQzNCLFNBQVMsRUFBRTtnQkFDVCxFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFO2FBQ3JEO1NBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRixDQUFBO0FBVFksaUJBQWlCO0lBMUI3QixRQUFRLENBQUM7UUFDUixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osVUFBVTtZQUNWLFlBQVk7WUFDWixjQUFjO1lBQ2Qsa0JBQWtCO1NBQ25CO1FBQ0QsWUFBWSxFQUFFO1lBQ1osV0FBVztZQUNYLGNBQWM7WUFDZCxtQkFBbUI7WUFDbkIsTUFBTTtZQUNOLFlBQVk7WUFDWixlQUFlO1lBQ2YsZUFBZTtZQUNmLGVBQWU7WUFDZixlQUFlO1lBQ2YsVUFBVTtZQUNWLFVBQVU7U0FDWDtRQUNELE9BQU8sRUFBRTtZQUNQLFdBQVc7WUFDWCxjQUFjO1NBQ2Y7S0FDRixDQUFDO0dBQ1csaUJBQWlCLENBUzdCO1NBVFksaUJBQWlCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBCaWRpTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2JpZGknO1xuaW1wb3J0IHsgUG9ydGFsTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3BvcnRhbCc7XG5pbXBvcnQgeyBQbGF0Zm9ybU1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBTbW9vdGhTY3JvbGxNb2R1bGUgfSBmcm9tICduZ3gtc2Nyb2xsYmFyL3Ntb290aC1zY3JvbGwnO1xuLy8gVW5jb21tZW50IHRoZSBmb2xsb3dpbmcgbGluZSBpbiBkZXZlbG9wbWVudCBtb2RlXG4vLyBpbXBvcnQgeyBTbW9vdGhTY3JvbGxNb2R1bGUgfSBmcm9tICcuLi8uLi9zbW9vdGgtc2Nyb2xsL3NyYy9wdWJsaWNfYXBpJztcblxuaW1wb3J0IHsgTmdTY3JvbGxiYXIgfSBmcm9tICcuL25nLXNjcm9sbGJhcic7XG5pbXBvcnQgeyBIaWRlTmF0aXZlU2Nyb2xsYmFyIH0gZnJvbSAnLi91dGlscy9oaWRlLW5hdGl2ZS1zY3JvbGxiYXInO1xuaW1wb3J0IHsgTmdBdHRyIH0gZnJvbSAnLi91dGlscy9uZy1hdHRyLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBSZXNpemVTZW5zb3IgfSBmcm9tICcuL3V0aWxzL3Jlc2l6ZS1zZW5zb3IuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRodW1iWURpcmVjdGl2ZSwgVGh1bWJYRGlyZWN0aXZlIH0gZnJvbSAnLi9zY3JvbGxiYXIvdGh1bWIvdGh1bWIuZGlyZWN0aXZlJztcbmltcG9ydCB7IFRyYWNrWERpcmVjdGl2ZSwgVHJhY2tZRGlyZWN0aXZlIH0gZnJvbSAnLi9zY3JvbGxiYXIvdHJhY2svdHJhY2suZGlyZWN0aXZlJztcbmltcG9ydCB7IFNjcm9sbGJhclgsIFNjcm9sbGJhclkgfSBmcm9tICcuL3Njcm9sbGJhci9zY3JvbGxiYXIuY29tcG9uZW50JztcbmltcG9ydCB7IFNjcm9sbFZpZXdwb3J0IH0gZnJvbSAnLi9zY3JvbGwtdmlld3BvcnQnO1xuaW1wb3J0IHsgTkdfU0NST0xMQkFSX09QVElPTlMsIE5nU2Nyb2xsYmFyT3B0aW9ucyB9IGZyb20gJy4vbmctc2Nyb2xsYmFyLm1vZGVsJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZSxcbiAgICBCaWRpTW9kdWxlLFxuICAgIFBvcnRhbE1vZHVsZSxcbiAgICBQbGF0Zm9ybU1vZHVsZSxcbiAgICBTbW9vdGhTY3JvbGxNb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgTmdTY3JvbGxiYXIsXG4gICAgU2Nyb2xsVmlld3BvcnQsXG4gICAgSGlkZU5hdGl2ZVNjcm9sbGJhcixcbiAgICBOZ0F0dHIsXG4gICAgUmVzaXplU2Vuc29yLFxuICAgIFRodW1iWURpcmVjdGl2ZSxcbiAgICBUaHVtYlhEaXJlY3RpdmUsXG4gICAgVHJhY2tYRGlyZWN0aXZlLFxuICAgIFRyYWNrWURpcmVjdGl2ZSxcbiAgICBTY3JvbGxiYXJZLFxuICAgIFNjcm9sbGJhclhcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIE5nU2Nyb2xsYmFyLFxuICAgIFNjcm9sbFZpZXdwb3J0XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTmdTY3JvbGxiYXJNb2R1bGUge1xuICBzdGF0aWMgd2l0aENvbmZpZyhvcHRpb25zOiBOZ1Njcm9sbGJhck9wdGlvbnMpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5nU2Nyb2xsYmFyTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ1Njcm9sbGJhck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7IHByb3ZpZGU6IE5HX1NDUk9MTEJBUl9PUFRJT05TLCB1c2VWYWx1ZTogb3B0aW9ucyB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19